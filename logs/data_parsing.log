

===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 100


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 100


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-1 시나리오(실제상황 연관성)', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-1 체감난이도(3번)', '19-2 체감난이도(3번) (주관식)', '19-3 문항 내용적절성 (3번)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '20-1. 지식이해 암기 중요도 (3번)', '20-2. 자료 해석(분석)중요도 (3번)', '20-3. 문제 해결력 (3번)', '20-4. 전략적 판단력 (3번)', '21-1 (시나리오) project 환경_실무유사도 (3번)', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-3 (시나리오) project 환경_자료활용도 (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '24-1. (Essential과 비교) 체감난이도', '24-2. (Essential과 비교) 지식이해/암기', '24-3. (Essential과 비교) 자료해석', '24-4. (Essential과 비교) 문제해결', '24-5. (Essential과 비교) 전략적판단', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '9-1 체감난이도(출제전반)', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '과제1-1', '과제1-2', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 10-1 시나리오(실제상황 연관성), 값 타입: int
  - 키: 10-2 시나리오 전반의견
, 값 타입: int
  - 키: 11-1 (과제1) 서술형선택, 값 타입: int
  - 키: 12-1 체감난이도(1번), 값 타입: int
  - 키: 12-1 체감난이도(1번).1, 값 타입: int
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: int
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: int
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: int
  - 키: 12-3 문항 내용적절성(1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 13-3. 문제 해결력 (1번), 값 타입: int
  - 키: 13-3. 문제 해결력 (2번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 19-1 체감난이도(3번), 값 타입: int
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: int
  - 키: 19-3 문항 내용적절성 (3번), 값 타입: int
  - 키: 2-1. 개발 분야 경력 , 값 타입: int
  - 키: 2-2. PL급 이상 경력, 값 타입: int
  - 키: 20-1. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 20-2. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 20-3. 문제 해결력 (3번), 값 타입: int
  - 키: 20-4. 전략적 판단력 (3번), 값 타입: int
  - 키: 21-1 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 21-3 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 24-1. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 24-2. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 24-3. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 24-4. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 24-5. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 25-1. 성취수준, 값 타입: int
  - 키: 25-1. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 9-1 체감난이도(출제전반), 값 타입: int
  - 키: 9-2 체감난이도(서술), 값 타입: int
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제1-1, 값 타입: int
  - 키: 과제1-2, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-1 시나리오(실제상황 연관성)', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-1 체감난이도(3번)', '19-2 체감난이도(3번) (주관식)', '19-3 문항 내용적절성 (3번)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '20-1. 지식이해 암기 중요도 (3번)', '20-2. 자료 해석(분석)중요도 (3번)', '20-3. 문제 해결력 (3번)', '20-4. 전략적 판단력 (3번)', '21-1 (시나리오) project 환경_실무유사도 (3번)', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-3 (시나리오) project 환경_자료활용도 (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '24-1. (Essential과 비교) 체감난이도', '24-2. (Essential과 비교) 지식이해/암기', '24-3. (Essential과 비교) 자료해석', '24-4. (Essential과 비교) 문제해결', '24-5. (Essential과 비교) 전략적판단', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '9-1 체감난이도(출제전반)', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '과제1-1', '과제1-2', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 10-1 시나리오(실제상황 연관성), 값 타입: int
  - 키: 10-2 시나리오 전반의견
, 값 타입: int
  - 키: 11-1 (과제1) 서술형선택, 값 타입: int
  - 키: 12-1 체감난이도(1번), 값 타입: int
  - 키: 12-1 체감난이도(1번).1, 값 타입: int
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: int
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: int
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: int
  - 키: 12-3 문항 내용적절성(1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 13-3. 문제 해결력 (1번), 값 타입: int
  - 키: 13-3. 문제 해결력 (2번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 19-1 체감난이도(3번), 값 타입: int
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: int
  - 키: 19-3 문항 내용적절성 (3번), 값 타입: int
  - 키: 2-1. 개발 분야 경력 , 값 타입: int
  - 키: 2-2. PL급 이상 경력, 값 타입: int
  - 키: 20-1. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 20-2. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 20-3. 문제 해결력 (3번), 값 타입: int
  - 키: 20-4. 전략적 판단력 (3번), 값 타입: int
  - 키: 21-1 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 21-3 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 24-1. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 24-2. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 24-3. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 24-4. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 24-5. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 25-1. 성취수준, 값 타입: int
  - 키: 25-1. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 9-1 체감난이도(출제전반), 값 타입: int
  - 키: 9-2 체감난이도(서술), 값 타입: int
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제1-1, 값 타입: int
  - 키: 과제1-2, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASIL-D 와 A-SPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'ASPICE LV2 및 ASIL-D 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '10', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '10', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '10', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1', '2']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-2 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-4와 동일 답변', 'EA를 작성할때에 유사한 아키텍쳐 구조였습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '기능안전을 의도한 내용 같은데 크게 와 닿지 않았다', '모듈의 순서도 등이 흡사하다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1', '2']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'CYCLOMATIC COMPLEXITY 개념만 제외하고는 S/W 현업에서 일반적으로 고려한 상황 및 요소라고 생각합니다.', '각 모듈 별 정보들이 상세해서 필요한 정보라고 판단하였다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '15-2와 동일 답변', '3번의 데이터가 그렇게 측정된 단서를 제공하기 때문에']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', 'SW구조에 대해 볼 수 있었습니다.', '기능안전, aspice 달성 중 sw아키텍처는 일부일 뿐이다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '15-4와 동일 답변', 'AP BSP 업무를 하면서 CPU / DDR MEMORY 사용 현황 및 그에 따른 문제점을 프로젝트 설계 단계에서 고민하나, MCU 와 같이 CPU / MEMORY 100% 인 상황을 고려하고 단일 S/W 을 설계하지 않습니다. AP BSP 에서는 수십개의 프로세스가 FOREGROUND / BACKGROUND 로 동작하기에 현업에서는 조금 더 추상적인 범위 내에서 설계 및 문제점 파악을 하고 있는 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '그럴 수도 있으니....', '실제 프로젝트 환경에서는 모듈 간의 상호 동작을 통한 성능과 복잡도도 중요함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', 'ASIL 레벨 별 TASK 의 분리', '서술형 1번에 좀 더 적합했을 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 9, 샘플 키: ['-', 'ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '기술 된 상황에 몰입하기 어려웠다', '문제 분석과 해결을 위한 역량을 어떻게 쌓아야 할지 다소 막연했고, 정답이나 모범 답안이 없는 문제와 같이 느껴져서 더 어려웠음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['3-1 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '..', '다 풀으라고 해서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-Spice의 프로세스와 SW 공학을 응용하는 문제라', 'ISO26262 및 ASPICE 획득 프로젝트를 경험한 인원이면 매우 쉽게 접근 했을거라 생각합니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만', '5년 이상']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1년 미만', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'SW와 HW 통합이라는 건 사실 매 SW 개발 시마다 이루어지기 때문에, 현실과 다르다. 차라리 서로 다른 SW 간 통합을 한다는 게 더 어울린다.', '선행 개발 프로젝트를 진행하면서 ASIL-B 등급에 대한 프로젝트를 경험해본적이 없음. 관련 교육도 부족하여 참여해본 적이 없음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '?', 'ASPICE 가 필요한 분야가 아닌 곳에서 개발을 진행하고 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'SW와 HW 통합이라는 건 사실 매 SW 개발 시마다 이루어지기 때문에, 현실과 다르다. 차라리 서로 다른 SW 간 통합을 한다는 게 더 어울린다.', '선행 개발 프로젝트를 진행하면서 ASIL-B 등급에 대한 프로젝트를 경험해본적이 없음. 관련 교육도 부족하여 참여해본 적이 없음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1년 미만', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만', '5년 이상']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1년 미만', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'SW와 HW 통합이라는 건 사실 매 SW 개발 시마다 이루어지기 때문에, 현실과 다르다. 차라리 서로 다른 SW 간 통합을 한다는 게 더 어울린다.', '선행 개발 프로젝트를 진행하면서 ASIL-B 등급에 대한 프로젝트를 경험해본적이 없음. 관련 교육도 부족하여 참여해본 적이 없음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '?', 'ASPICE 가 필요한 분야가 아닌 곳에서 개발을 진행하고 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-SPICE 교육 필요', 'ASPICE 프로세스를 설명하는 일반적인 그림']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', '-', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0', '0.3', '0.6']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '100%를 달성했다고 하더라도 리얼 월드에서의 적용은 또 다른 문제인 것 같고, 일정/인력 등의 자원과 커뮤니케이션은 실전에서 또 다름', '70% 정도는 갖추어야 어느 정도 문제 출제 의도에 맞는 행동을 현업에서도 할 수 있다고 생각합니다. 나머지 30%는 현업 분야와 조직, 양산 아이템에 따라 대응 방향과 전략이 다를 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '2번같이 외워야하는 문제보단 3번같이 암기보단 응용할 수 있는 문제 위주로 출제가 되었으면 좋겠습니다.', '관련 교육을 이수하지 않는 다면 문제가 너무 추상적으로 느껴질 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['경험은 없으나 이론적 지식은 있음', '경험이 없으며 내용도 잘 알지 못함', '상급자 지도 하에 보조적 업무 수행 경험 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: [' ', 'A-SPICE, 사이버 보안 (ISO/SAE - 21434)', 'A-SPICE, 사이버 보안 (ISO/SAE - 21434), AUTOSAR']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, C++', 'C, C++, JAVA']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 여유로웠다', '매우 여유로웠다', '적절했다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ISO-26262 혹은 ASPICE 관련 상세 기준에 대한 내용은 보통 레퍼런스를 참조하기에, 해당 내용을 외우고 있는것이 아니다 보니, 시험 문제를 풀기에 다소 어려웠습니다.  ', 'ISO26262나 A-SPICE의 지식 뿐만 아니라, 실재 설계 업무 경험으로 풀 수 있는 문제였음', 'ISO26262와 A-SPICE가 범위가 방대하며 실무에서 다루어본적이 없어서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 쉬움', '약간 어려움', '적절함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['상위권', '중위권', '하위권']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['권민안', '김관수', '김세현']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0점', '100점이상', '10점대']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 1, 샘플 키: ['예']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0점', '100점이상', '10점대']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 1, 샘플 키: ['예']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-1 시나리오(실제상황 연관성)', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-1 체감난이도(3번)', '19-2 체감난이도(3번) (주관식)', '19-3 문항 내용적절성 (3번)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '20-1. 지식이해 암기 중요도 (3번)', '20-2. 자료 해석(분석)중요도 (3번)', '20-3. 문제 해결력 (3번)', '20-4. 전략적 판단력 (3번)', '21-1 (시나리오) project 환경_실무유사도 (3번)', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-3 (시나리오) project 환경_자료활용도 (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '24-1. (Essential과 비교) 체감난이도', '24-2. (Essential과 비교) 지식이해/암기', '24-3. (Essential과 비교) 자료해석', '24-4. (Essential과 비교) 문제해결', '24-5. (Essential과 비교) 전략적판단', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '9-1 체감난이도(출제전반)', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '과제1-1', '과제1-2', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 10-1 시나리오(실제상황 연관성), 값 타입: int
  - 키: 10-2 시나리오 전반의견
, 값 타입: int
  - 키: 11-1 (과제1) 서술형선택, 값 타입: int
  - 키: 12-1 체감난이도(1번), 값 타입: int
  - 키: 12-1 체감난이도(1번).1, 값 타입: int
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: int
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: int
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: int
  - 키: 12-3 문항 내용적절성(1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 13-3. 문제 해결력 (1번), 값 타입: int
  - 키: 13-3. 문제 해결력 (2번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 19-1 체감난이도(3번), 값 타입: int
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: int
  - 키: 19-3 문항 내용적절성 (3번), 값 타입: int
  - 키: 2-1. 개발 분야 경력 , 값 타입: int
  - 키: 2-2. PL급 이상 경력, 값 타입: int
  - 키: 20-1. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 20-2. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 20-3. 문제 해결력 (3번), 값 타입: int
  - 키: 20-4. 전략적 판단력 (3번), 값 타입: int
  - 키: 21-1 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 21-3 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 24-1. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 24-2. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 24-3. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 24-4. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 24-5. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 25-1. 성취수준, 값 타입: int
  - 키: 25-1. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 9-1 체감난이도(출제전반), 값 타입: int
  - 키: 9-2 체감난이도(서술), 값 타입: int
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제1-1, 값 타입: int
  - 키: 과제1-2, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-1 시나리오(실제상황 연관성)', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-1 체감난이도(3번)', '19-2 체감난이도(3번) (주관식)', '19-3 문항 내용적절성 (3번)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '20-1. 지식이해 암기 중요도 (3번)', '20-2. 자료 해석(분석)중요도 (3번)', '20-3. 문제 해결력 (3번)', '20-4. 전략적 판단력 (3번)', '21-1 (시나리오) project 환경_실무유사도 (3번)', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-3 (시나리오) project 환경_자료활용도 (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '24-1. (Essential과 비교) 체감난이도', '24-2. (Essential과 비교) 지식이해/암기', '24-3. (Essential과 비교) 자료해석', '24-4. (Essential과 비교) 문제해결', '24-5. (Essential과 비교) 전략적판단', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '9-1 체감난이도(출제전반)', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '과제1-1', '과제1-2', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 10-1 시나리오(실제상황 연관성), 값 타입: int
  - 키: 10-2 시나리오 전반의견
, 값 타입: int
  - 키: 11-1 (과제1) 서술형선택, 값 타입: int
  - 키: 12-1 체감난이도(1번), 값 타입: int
  - 키: 12-1 체감난이도(1번).1, 값 타입: int
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: int
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: int
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: int
  - 키: 12-3 문항 내용적절성(1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 13-3. 문제 해결력 (1번), 값 타입: int
  - 키: 13-3. 문제 해결력 (2번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 19-1 체감난이도(3번), 값 타입: int
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: int
  - 키: 19-3 문항 내용적절성 (3번), 값 타입: int
  - 키: 2-1. 개발 분야 경력 , 값 타입: int
  - 키: 2-2. PL급 이상 경력, 값 타입: int
  - 키: 20-1. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 20-2. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 20-3. 문제 해결력 (3번), 값 타입: int
  - 키: 20-4. 전략적 판단력 (3번), 값 타입: int
  - 키: 21-1 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 21-3 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 24-1. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 24-2. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 24-3. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 24-4. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 24-5. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 25-1. 성취수준, 값 타입: int
  - 키: 25-1. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 9-1 체감난이도(출제전반), 값 타입: int
  - 키: 9-2 체감난이도(서술), 값 타입: int
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제1-1, 값 타입: int
  - 키: 과제1-2, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-1 시나리오(실제상황 연관성)', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-1 체감난이도(3번)', '19-2 체감난이도(3번) (주관식)', '19-3 문항 내용적절성 (3번)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '20-1. 지식이해 암기 중요도 (3번)', '20-2. 자료 해석(분석)중요도 (3번)', '20-3. 문제 해결력 (3번)', '20-4. 전략적 판단력 (3번)', '21-1 (시나리오) project 환경_실무유사도 (3번)', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-3 (시나리오) project 환경_자료활용도 (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '24-1. (Essential과 비교) 체감난이도', '24-2. (Essential과 비교) 지식이해/암기', '24-3. (Essential과 비교) 자료해석', '24-4. (Essential과 비교) 문제해결', '24-5. (Essential과 비교) 전략적판단', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '9-1 체감난이도(출제전반)', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '과제1-1', '과제1-2', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 10-1 시나리오(실제상황 연관성), 값 타입: int
  - 키: 10-2 시나리오 전반의견
, 값 타입: int
  - 키: 11-1 (과제1) 서술형선택, 값 타입: int
  - 키: 12-1 체감난이도(1번), 값 타입: int
  - 키: 12-1 체감난이도(1번).1, 값 타입: int
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: int
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: int
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: int
  - 키: 12-3 문항 내용적절성(1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 13-3. 문제 해결력 (1번), 값 타입: int
  - 키: 13-3. 문제 해결력 (2번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 19-1 체감난이도(3번), 값 타입: int
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: int
  - 키: 19-3 문항 내용적절성 (3번), 값 타입: int
  - 키: 2-1. 개발 분야 경력 , 값 타입: int
  - 키: 2-2. PL급 이상 경력, 값 타입: int
  - 키: 20-1. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 20-2. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 20-3. 문제 해결력 (3번), 값 타입: int
  - 키: 20-4. 전략적 판단력 (3번), 값 타입: int
  - 키: 21-1 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 21-3 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 24-1. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 24-2. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 24-3. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 24-4. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 24-5. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 25-1. 성취수준, 값 타입: int
  - 키: 25-1. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 9-1 체감난이도(출제전반), 값 타입: int
  - 키: 9-2 체감난이도(서술), 값 타입: int
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제1-1, 값 타입: int
  - 키: 과제1-2, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-1 시나리오(실제상황 연관성)', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-1 체감난이도(3번)', '19-2 체감난이도(3번) (주관식)', '19-3 문항 내용적절성 (3번)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '20-1. 지식이해 암기 중요도 (3번)', '20-2. 자료 해석(분석)중요도 (3번)', '20-3. 문제 해결력 (3번)', '20-4. 전략적 판단력 (3번)', '21-1 (시나리오) project 환경_실무유사도 (3번)', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-3 (시나리오) project 환경_자료활용도 (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '24-1. (Essential과 비교) 체감난이도', '24-2. (Essential과 비교) 지식이해/암기', '24-3. (Essential과 비교) 자료해석', '24-4. (Essential과 비교) 문제해결', '24-5. (Essential과 비교) 전략적판단', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '9-1 체감난이도(출제전반)', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '과제1-1', '과제1-2', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 10-1 시나리오(실제상황 연관성), 값 타입: int
  - 키: 10-2 시나리오 전반의견
, 값 타입: int
  - 키: 11-1 (과제1) 서술형선택, 값 타입: int
  - 키: 12-1 체감난이도(1번), 값 타입: int
  - 키: 12-1 체감난이도(1번).1, 값 타입: int
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: int
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: int
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: int
  - 키: 12-3 문항 내용적절성(1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 13-3. 문제 해결력 (1번), 값 타입: int
  - 키: 13-3. 문제 해결력 (2번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 19-1 체감난이도(3번), 값 타입: int
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: int
  - 키: 19-3 문항 내용적절성 (3번), 값 타입: int
  - 키: 2-1. 개발 분야 경력 , 값 타입: int
  - 키: 2-2. PL급 이상 경력, 값 타입: int
  - 키: 20-1. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 20-2. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 20-3. 문제 해결력 (3번), 값 타입: int
  - 키: 20-4. 전략적 판단력 (3번), 값 타입: int
  - 키: 21-1 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 21-3 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 24-1. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 24-2. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 24-3. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 24-4. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 24-5. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 25-1. 성취수준, 값 타입: int
  - 키: 25-1. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 9-1 체감난이도(출제전반), 값 타입: int
  - 키: 9-2 체감난이도(서술), 값 타입: int
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제1-1, 값 타입: int
  - 키: 과제1-2, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASIL-D 와 A-SPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASIL-D 와 A-SPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'ASPICE LV2 및 ASIL-D 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '10', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '10', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '10', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1', '2']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-2 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-4와 동일 답변', 'EA를 작성할때에 유사한 아키텍쳐 구조였습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-2 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-2 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-2 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-2 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-2 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-4와 동일 답변', 'EA를 작성할때에 유사한 아키텍쳐 구조였습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '기능안전을 의도한 내용 같은데 크게 와 닿지 않았다', '모듈의 순서도 등이 흡사하다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1', '2']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'CYCLOMATIC COMPLEXITY 개념만 제외하고는 S/W 현업에서 일반적으로 고려한 상황 및 요소라고 생각합니다.', '각 모듈 별 정보들이 상세해서 필요한 정보라고 판단하였다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '15-2와 동일 답변', '3번의 데이터가 그렇게 측정된 단서를 제공하기 때문에']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', 'SW구조에 대해 볼 수 있었습니다.', '기능안전, aspice 달성 중 sw아키텍처는 일부일 뿐이다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '15-4와 동일 답변', 'AP BSP 업무를 하면서 CPU / DDR MEMORY 사용 현황 및 그에 따른 문제점을 프로젝트 설계 단계에서 고민하나, MCU 와 같이 CPU / MEMORY 100% 인 상황을 고려하고 단일 S/W 을 설계하지 않습니다. AP BSP 에서는 수십개의 프로세스가 FOREGROUND / BACKGROUND 로 동작하기에 현업에서는 조금 더 추상적인 범위 내에서 설계 및 문제점 파악을 하고 있는 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '그럴 수도 있으니....', '실제 프로젝트 환경에서는 모듈 간의 상호 동작을 통한 성능과 복잡도도 중요함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', 'ASIL 레벨 별 TASK 의 분리', '서술형 1번에 좀 더 적합했을 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 9, 샘플 키: ['-', 'ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '기술 된 상황에 몰입하기 어려웠다', '문제 분석과 해결을 위한 역량을 어떻게 쌓아야 할지 다소 막연했고, 정답이나 모범 답안이 없는 문제와 같이 느껴져서 더 어려웠음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['3-1 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '..', '다 풀으라고 해서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-Spice의 프로세스와 SW 공학을 응용하는 문제라', 'ISO26262 및 ASPICE 획득 프로젝트를 경험한 인원이면 매우 쉽게 접근 했을거라 생각합니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만', '5년 이상']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1년 미만', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'SW와 HW 통합이라는 건 사실 매 SW 개발 시마다 이루어지기 때문에, 현실과 다르다. 차라리 서로 다른 SW 간 통합을 한다는 게 더 어울린다.', '선행 개발 프로젝트를 진행하면서 ASIL-B 등급에 대한 프로젝트를 경험해본적이 없음. 관련 교육도 부족하여 참여해본 적이 없음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '?', 'ASPICE 가 필요한 분야가 아닌 곳에서 개발을 진행하고 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-SPICE 교육 필요', 'ASPICE 프로세스를 설명하는 일반적인 그림']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', '-', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0', '0.3', '0.6']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '100%를 달성했다고 하더라도 리얼 월드에서의 적용은 또 다른 문제인 것 같고, 일정/인력 등의 자원과 커뮤니케이션은 실전에서 또 다름', '70% 정도는 갖추어야 어느 정도 문제 출제 의도에 맞는 행동을 현업에서도 할 수 있다고 생각합니다. 나머지 30%는 현업 분야와 조직, 양산 아이템에 따라 대응 방향과 전략이 다를 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '2번같이 외워야하는 문제보단 3번같이 암기보단 응용할 수 있는 문제 위주로 출제가 되었으면 좋겠습니다.', '관련 교육을 이수하지 않는 다면 문제가 너무 추상적으로 느껴질 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['경험은 없으나 이론적 지식은 있음', '경험이 없으며 내용도 잘 알지 못함', '상급자 지도 하에 보조적 업무 수행 경험 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: [' ', 'A-SPICE, 사이버 보안 (ISO/SAE - 21434)', 'A-SPICE, 사이버 보안 (ISO/SAE - 21434), AUTOSAR']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, C++', 'C, C++, JAVA']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 여유로웠다', '매우 여유로웠다', '적절했다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ISO-26262 혹은 ASPICE 관련 상세 기준에 대한 내용은 보통 레퍼런스를 참조하기에, 해당 내용을 외우고 있는것이 아니다 보니, 시험 문제를 풀기에 다소 어려웠습니다.  ', 'ISO26262나 A-SPICE의 지식 뿐만 아니라, 실재 설계 업무 경험으로 풀 수 있는 문제였음', 'ISO26262와 A-SPICE가 범위가 방대하며 실무에서 다루어본적이 없어서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 쉬움', '약간 어려움', '적절함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['상위권', '중위권', '하위권']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['권민안', '김관수', '김세현']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0점', '100점이상', '10점대']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 1, 샘플 키: ['예']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 1, 샘플 키: ['예']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0점', '100점이상', '10점대']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['권민안', '김관수', '김세현']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['상위권', '중위권', '하위권']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 쉬움', '약간 어려움', '적절함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ISO-26262 혹은 ASPICE 관련 상세 기준에 대한 내용은 보통 레퍼런스를 참조하기에, 해당 내용을 외우고 있는것이 아니다 보니, 시험 문제를 풀기에 다소 어려웠습니다.  ', 'ISO26262나 A-SPICE의 지식 뿐만 아니라, 실재 설계 업무 경험으로 풀 수 있는 문제였음', 'ISO26262와 A-SPICE가 범위가 방대하며 실무에서 다루어본적이 없어서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 여유로웠다', '매우 여유로웠다', '적절했다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, C++', 'C, C++, JAVA']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: [' ', 'A-SPICE, 사이버 보안 (ISO/SAE - 21434)', 'A-SPICE, 사이버 보안 (ISO/SAE - 21434), AUTOSAR']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['경험은 없으나 이론적 지식은 있음', '경험이 없으며 내용도 잘 알지 못함', '상급자 지도 하에 보조적 업무 수행 경험 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '2번같이 외워야하는 문제보단 3번같이 암기보단 응용할 수 있는 문제 위주로 출제가 되었으면 좋겠습니다.', '관련 교육을 이수하지 않는 다면 문제가 너무 추상적으로 느껴질 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '100%를 달성했다고 하더라도 리얼 월드에서의 적용은 또 다른 문제인 것 같고, 일정/인력 등의 자원과 커뮤니케이션은 실전에서 또 다름', '70% 정도는 갖추어야 어느 정도 문제 출제 의도에 맞는 행동을 현업에서도 할 수 있다고 생각합니다. 나머지 30%는 현업 분야와 조직, 양산 아이템에 따라 대응 방향과 전략이 다를 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0', '0.3', '0.6']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', '-', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-SPICE 교육 필요', 'ASPICE 프로세스를 설명하는 일반적인 그림']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '?', 'ASPICE 가 필요한 분야가 아닌 곳에서 개발을 진행하고 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'SW와 HW 통합이라는 건 사실 매 SW 개발 시마다 이루어지기 때문에, 현실과 다르다. 차라리 서로 다른 SW 간 통합을 한다는 게 더 어울린다.', '선행 개발 프로젝트를 진행하면서 ASIL-B 등급에 대한 프로젝트를 경험해본적이 없음. 관련 교육도 부족하여 참여해본 적이 없음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1년 미만', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만', '5년 이상']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-Spice의 프로세스와 SW 공학을 응용하는 문제라', 'ISO26262 및 ASPICE 획득 프로젝트를 경험한 인원이면 매우 쉽게 접근 했을거라 생각합니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '..', '다 풀으라고 해서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['3-1 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '기술 된 상황에 몰입하기 어려웠다', '문제 분석과 해결을 위한 역량을 어떻게 쌓아야 할지 다소 막연했고, 정답이나 모범 답안이 없는 문제와 같이 느껴져서 더 어려웠음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 9, 샘플 키: ['-', 'ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', 'ASIL 레벨 별 TASK 의 분리', '서술형 1번에 좀 더 적합했을 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '그럴 수도 있으니....', '실제 프로젝트 환경에서는 모듈 간의 상호 동작을 통한 성능과 복잡도도 중요함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '15-4와 동일 답변', 'AP BSP 업무를 하면서 CPU / DDR MEMORY 사용 현황 및 그에 따른 문제점을 프로젝트 설계 단계에서 고민하나, MCU 와 같이 CPU / MEMORY 100% 인 상황을 고려하고 단일 S/W 을 설계하지 않습니다. AP BSP 에서는 수십개의 프로세스가 FOREGROUND / BACKGROUND 로 동작하기에 현업에서는 조금 더 추상적인 범위 내에서 설계 및 문제점 파악을 하고 있는 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', 'SW구조에 대해 볼 수 있었습니다.', '기능안전, aspice 달성 중 sw아키텍처는 일부일 뿐이다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '15-2와 동일 답변', '3번의 데이터가 그렇게 측정된 단서를 제공하기 때문에']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'CYCLOMATIC COMPLEXITY 개념만 제외하고는 S/W 현업에서 일반적으로 고려한 상황 및 요소라고 생각합니다.', '각 모듈 별 정보들이 상세해서 필요한 정보라고 판단하였다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1', '2']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '기능안전을 의도한 내용 같은데 크게 와 닿지 않았다', '모듈의 순서도 등이 흡사하다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-4와 동일 답변', 'EA를 작성할때에 유사한 아키텍쳐 구조였습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-2 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1', '2']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '10', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '10', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '10', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'ASPICE LV2 및 ASIL-D 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASIL-D 와 A-SPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-2 체감난이도(3번) (주관식)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '8. 시험시간 적절성', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '상/중/하위권', '성함', '점수대', '참여여부', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 1. 업무경력, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 10-2 시나리오 전반의견
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 11-1 (과제1) 서술형선택, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 12-1 체감난이도(1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 12-1 체감난이도(1번).1, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 12-3 문항 내용적절성(1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-3. 문제 해결력 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-3. 문제 해결력 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 2-1. 개발 분야 경력 , 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 2-2. PL급 이상 경력, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 25-1. 성취수준, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 25-1. 성취수준(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 26. 시험관련 하고싶은 말, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 4. 경험한 국제표준(중복), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 5. 사용언어, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 8. 시험시간 적절성, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 9-2 체감난이도(서술), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 상/중/하위권, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 성함, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 점수대, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 참여여부, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 통과여부(70%적용), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-1 시나리오(실제상황 연관성)', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-1 체감난이도(3번)', '19-2 체감난이도(3번) (주관식)', '19-3 문항 내용적절성 (3번)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '20-1. 지식이해 암기 중요도 (3번)', '20-2. 자료 해석(분석)중요도 (3번)', '20-3. 문제 해결력 (3번)', '20-4. 전략적 판단력 (3번)', '21-1 (시나리오) project 환경_실무유사도 (3번)', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-3 (시나리오) project 환경_자료활용도 (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '24-1. (Essential과 비교) 체감난이도', '24-2. (Essential과 비교) 지식이해/암기', '24-3. (Essential과 비교) 자료해석', '24-4. (Essential과 비교) 문제해결', '24-5. (Essential과 비교) 전략적판단', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '9-1 체감난이도(출제전반)', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '과제1-1', '과제1-2', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 10-1 시나리오(실제상황 연관성), 값 타입: int
  - 키: 10-2 시나리오 전반의견
, 값 타입: int
  - 키: 11-1 (과제1) 서술형선택, 값 타입: int
  - 키: 12-1 체감난이도(1번), 값 타입: int
  - 키: 12-1 체감난이도(1번).1, 값 타입: int
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: int
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: int
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: int
  - 키: 12-3 문항 내용적절성(1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 13-3. 문제 해결력 (1번), 값 타입: int
  - 키: 13-3. 문제 해결력 (2번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 19-1 체감난이도(3번), 값 타입: int
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: int
  - 키: 19-3 문항 내용적절성 (3번), 값 타입: int
  - 키: 2-1. 개발 분야 경력 , 값 타입: int
  - 키: 2-2. PL급 이상 경력, 값 타입: int
  - 키: 20-1. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 20-2. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 20-3. 문제 해결력 (3번), 값 타입: int
  - 키: 20-4. 전략적 판단력 (3번), 값 타입: int
  - 키: 21-1 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 21-3 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 24-1. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 24-2. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 24-3. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 24-4. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 24-5. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 25-1. 성취수준, 값 타입: int
  - 키: 25-1. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 9-1 체감난이도(출제전반), 값 타입: int
  - 키: 9-2 체감난이도(서술), 값 타입: int
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제1-1, 값 타입: int
  - 키: 과제1-2, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 69
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 24
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'SW와 HW 통합이라는 건 사실 매 SW 개발 시마다 이루어지기 때문에, 현실과 다르다. 차라리 서로 다른 SW 간 통합을 한다는 게 더 어울린다.', '선행 개발 프로젝트를 진행하면서 ASIL-B 등급에 대한 프로젝트를 경험해본적이 없음. 관련 교육도 부족하여 참여해본 적이 없음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'SW와 HW 통합이라는 건 사실 매 SW 개발 시마다 이루어지기 때문에, 현실과 다르다. 차라리 서로 다른 SW 간 통합을 한다는 게 더 어울린다.', '선행 개발 프로젝트를 진행하면서 ASIL-B 등급에 대한 프로젝트를 경험해본적이 없음. 관련 교육도 부족하여 참여해본 적이 없음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '?', 'ASPICE 가 필요한 분야가 아닌 곳에서 개발을 진행하고 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-SPICE 교육 필요', 'ASPICE 프로세스를 설명하는 일반적인 그림']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', '-', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-SPICE 교육 필요', 'ASPICE 프로세스를 설명하는 일반적인 그림']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-SPICE 교육 필요', 'ASPICE 프로세스를 설명하는 일반적인 그림']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['상위권', '중위권', '하위권']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['상위권', '중위권', '하위권']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['권민안', '김관수', '김세현']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0점', '100점이상', '10점대']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 1, 샘플 키: ['예']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 69
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 24
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 69
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 24
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-1 시나리오(실제상황 연관성)', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-1 체감난이도(3번)', '19-2 체감난이도(3번) (주관식)', '19-3 문항 내용적절성 (3번)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '20-1. 지식이해 암기 중요도 (3번)', '20-2. 자료 해석(분석)중요도 (3번)', '20-3. 문제 해결력 (3번)', '20-4. 전략적 판단력 (3번)', '21-1 (시나리오) project 환경_실무유사도 (3번)', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-3 (시나리오) project 환경_자료활용도 (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '24-1. (Essential과 비교) 체감난이도', '24-2. (Essential과 비교) 지식이해/암기', '24-3. (Essential과 비교) 자료해석', '24-4. (Essential과 비교) 문제해결', '24-5. (Essential과 비교) 전략적판단', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '9-1 체감난이도(출제전반)', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '과제1-1', '과제1-2', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 10-1 시나리오(실제상황 연관성), 값 타입: int
  - 키: 10-2 시나리오 전반의견
, 값 타입: int
  - 키: 11-1 (과제1) 서술형선택, 값 타입: int
  - 키: 12-1 체감난이도(1번), 값 타입: int
  - 키: 12-1 체감난이도(1번).1, 값 타입: int
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: int
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: int
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: int
  - 키: 12-3 문항 내용적절성(1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 13-3. 문제 해결력 (1번), 값 타입: int
  - 키: 13-3. 문제 해결력 (2번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 19-1 체감난이도(3번), 값 타입: int
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: int
  - 키: 19-3 문항 내용적절성 (3번), 값 타입: int
  - 키: 2-1. 개발 분야 경력 , 값 타입: int
  - 키: 2-2. PL급 이상 경력, 값 타입: int
  - 키: 20-1. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 20-2. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 20-3. 문제 해결력 (3번), 값 타입: int
  - 키: 20-4. 전략적 판단력 (3번), 값 타입: int
  - 키: 21-1 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 21-3 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 24-1. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 24-2. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 24-3. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 24-4. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 24-5. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 25-1. 성취수준, 값 타입: int
  - 키: 25-1. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 9-1 체감난이도(출제전반), 값 타입: int
  - 키: 9-2 체감난이도(서술), 값 타입: int
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제1-1, 값 타입: int
  - 키: 과제1-2, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-1 시나리오(실제상황 연관성)', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-1 체감난이도(3번)', '19-2 체감난이도(3번) (주관식)', '19-3 문항 내용적절성 (3번)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '20-1. 지식이해 암기 중요도 (3번)', '20-2. 자료 해석(분석)중요도 (3번)', '20-3. 문제 해결력 (3번)', '20-4. 전략적 판단력 (3번)', '21-1 (시나리오) project 환경_실무유사도 (3번)', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-3 (시나리오) project 환경_자료활용도 (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '24-1. (Essential과 비교) 체감난이도', '24-2. (Essential과 비교) 지식이해/암기', '24-3. (Essential과 비교) 자료해석', '24-4. (Essential과 비교) 문제해결', '24-5. (Essential과 비교) 전략적판단', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '9-1 체감난이도(출제전반)', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '과제1-1', '과제1-2', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 10-1 시나리오(실제상황 연관성), 값 타입: int
  - 키: 10-2 시나리오 전반의견
, 값 타입: int
  - 키: 11-1 (과제1) 서술형선택, 값 타입: int
  - 키: 12-1 체감난이도(1번), 값 타입: int
  - 키: 12-1 체감난이도(1번).1, 값 타입: int
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: int
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: int
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: int
  - 키: 12-3 문항 내용적절성(1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 13-3. 문제 해결력 (1번), 값 타입: int
  - 키: 13-3. 문제 해결력 (2번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 19-1 체감난이도(3번), 값 타입: int
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: int
  - 키: 19-3 문항 내용적절성 (3번), 값 타입: int
  - 키: 2-1. 개발 분야 경력 , 값 타입: int
  - 키: 2-2. PL급 이상 경력, 값 타입: int
  - 키: 20-1. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 20-2. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 20-3. 문제 해결력 (3번), 값 타입: int
  - 키: 20-4. 전략적 판단력 (3번), 값 타입: int
  - 키: 21-1 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 21-3 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 24-1. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 24-2. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 24-3. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 24-4. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 24-5. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 25-1. 성취수준, 값 타입: int
  - 키: 25-1. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 9-1 체감난이도(출제전반), 값 타입: int
  - 키: 9-2 체감난이도(서술), 값 타입: int
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제1-1, 값 타입: int
  - 키: 과제1-2, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 69
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 24
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 69
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 24
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASIL-D 와 A-SPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'ASPICE LV2 및 ASIL-D 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '10', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '10', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '10', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1', '2']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-2 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-4와 동일 답변', 'EA를 작성할때에 유사한 아키텍쳐 구조였습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '기능안전을 의도한 내용 같은데 크게 와 닿지 않았다', '모듈의 순서도 등이 흡사하다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1', '2']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'CYCLOMATIC COMPLEXITY 개념만 제외하고는 S/W 현업에서 일반적으로 고려한 상황 및 요소라고 생각합니다.', '각 모듈 별 정보들이 상세해서 필요한 정보라고 판단하였다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '15-2와 동일 답변', '3번의 데이터가 그렇게 측정된 단서를 제공하기 때문에']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', 'SW구조에 대해 볼 수 있었습니다.', '기능안전, aspice 달성 중 sw아키텍처는 일부일 뿐이다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '15-4와 동일 답변', 'AP BSP 업무를 하면서 CPU / DDR MEMORY 사용 현황 및 그에 따른 문제점을 프로젝트 설계 단계에서 고민하나, MCU 와 같이 CPU / MEMORY 100% 인 상황을 고려하고 단일 S/W 을 설계하지 않습니다. AP BSP 에서는 수십개의 프로세스가 FOREGROUND / BACKGROUND 로 동작하기에 현업에서는 조금 더 추상적인 범위 내에서 설계 및 문제점 파악을 하고 있는 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '그럴 수도 있으니....', '실제 프로젝트 환경에서는 모듈 간의 상호 동작을 통한 성능과 복잡도도 중요함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', 'ASIL 레벨 별 TASK 의 분리', '서술형 1번에 좀 더 적합했을 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 9, 샘플 키: ['-', 'ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '기술 된 상황에 몰입하기 어려웠다', '문제 분석과 해결을 위한 역량을 어떻게 쌓아야 할지 다소 막연했고, 정답이나 모범 답안이 없는 문제와 같이 느껴져서 더 어려웠음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['3-1 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '..', '다 풀으라고 해서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-Spice의 프로세스와 SW 공학을 응용하는 문제라', 'ISO26262 및 ASPICE 획득 프로젝트를 경험한 인원이면 매우 쉽게 접근 했을거라 생각합니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만', '5년 이상']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1년 미만', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'SW와 HW 통합이라는 건 사실 매 SW 개발 시마다 이루어지기 때문에, 현실과 다르다. 차라리 서로 다른 SW 간 통합을 한다는 게 더 어울린다.', '선행 개발 프로젝트를 진행하면서 ASIL-B 등급에 대한 프로젝트를 경험해본적이 없음. 관련 교육도 부족하여 참여해본 적이 없음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '?', 'ASPICE 가 필요한 분야가 아닌 곳에서 개발을 진행하고 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-SPICE 교육 필요', 'ASPICE 프로세스를 설명하는 일반적인 그림']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', '-', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0', '0.3', '0.6']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '100%를 달성했다고 하더라도 리얼 월드에서의 적용은 또 다른 문제인 것 같고, 일정/인력 등의 자원과 커뮤니케이션은 실전에서 또 다름', '70% 정도는 갖추어야 어느 정도 문제 출제 의도에 맞는 행동을 현업에서도 할 수 있다고 생각합니다. 나머지 30%는 현업 분야와 조직, 양산 아이템에 따라 대응 방향과 전략이 다를 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '2번같이 외워야하는 문제보단 3번같이 암기보단 응용할 수 있는 문제 위주로 출제가 되었으면 좋겠습니다.', '관련 교육을 이수하지 않는 다면 문제가 너무 추상적으로 느껴질 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['경험은 없으나 이론적 지식은 있음', '경험이 없으며 내용도 잘 알지 못함', '상급자 지도 하에 보조적 업무 수행 경험 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: [' ', 'A-SPICE, 사이버 보안 (ISO/SAE - 21434)', 'A-SPICE, 사이버 보안 (ISO/SAE - 21434), AUTOSAR']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, C++', 'C, C++, JAVA']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 여유로웠다', '매우 여유로웠다', '적절했다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ISO-26262 혹은 ASPICE 관련 상세 기준에 대한 내용은 보통 레퍼런스를 참조하기에, 해당 내용을 외우고 있는것이 아니다 보니, 시험 문제를 풀기에 다소 어려웠습니다.  ', 'ISO26262나 A-SPICE의 지식 뿐만 아니라, 실재 설계 업무 경험으로 풀 수 있는 문제였음', 'ISO26262와 A-SPICE가 범위가 방대하며 실무에서 다루어본적이 없어서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 쉬움', '약간 어려움', '적절함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 1, 샘플 키: ['예']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0점', '100점이상', '10점대']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['권민안', '김관수', '김세현']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['상위권', '중위권', '하위권']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 쉬움', '약간 어려움', '적절함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ISO-26262 혹은 ASPICE 관련 상세 기준에 대한 내용은 보통 레퍼런스를 참조하기에, 해당 내용을 외우고 있는것이 아니다 보니, 시험 문제를 풀기에 다소 어려웠습니다.  ', 'ISO26262나 A-SPICE의 지식 뿐만 아니라, 실재 설계 업무 경험으로 풀 수 있는 문제였음', 'ISO26262와 A-SPICE가 범위가 방대하며 실무에서 다루어본적이 없어서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 여유로웠다', '매우 여유로웠다', '적절했다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, C++', 'C, C++, JAVA']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: [' ', 'A-SPICE, 사이버 보안 (ISO/SAE - 21434)', 'A-SPICE, 사이버 보안 (ISO/SAE - 21434), AUTOSAR']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['경험은 없으나 이론적 지식은 있음', '경험이 없으며 내용도 잘 알지 못함', '상급자 지도 하에 보조적 업무 수행 경험 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '2번같이 외워야하는 문제보단 3번같이 암기보단 응용할 수 있는 문제 위주로 출제가 되었으면 좋겠습니다.', '관련 교육을 이수하지 않는 다면 문제가 너무 추상적으로 느껴질 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '100%를 달성했다고 하더라도 리얼 월드에서의 적용은 또 다른 문제인 것 같고, 일정/인력 등의 자원과 커뮤니케이션은 실전에서 또 다름', '70% 정도는 갖추어야 어느 정도 문제 출제 의도에 맞는 행동을 현업에서도 할 수 있다고 생각합니다. 나머지 30%는 현업 분야와 조직, 양산 아이템에 따라 대응 방향과 전략이 다를 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0', '0.3', '0.6']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', '-', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-SPICE 교육 필요', 'ASPICE 프로세스를 설명하는 일반적인 그림']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '?', 'ASPICE 가 필요한 분야가 아닌 곳에서 개발을 진행하고 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'SW와 HW 통합이라는 건 사실 매 SW 개발 시마다 이루어지기 때문에, 현실과 다르다. 차라리 서로 다른 SW 간 통합을 한다는 게 더 어울린다.', '선행 개발 프로젝트를 진행하면서 ASIL-B 등급에 대한 프로젝트를 경험해본적이 없음. 관련 교육도 부족하여 참여해본 적이 없음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1년 미만', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만', '5년 이상']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'A-Spice의 프로세스와 SW 공학을 응용하는 문제라', 'ISO26262 및 ASPICE 획득 프로젝트를 경험한 인원이면 매우 쉽게 접근 했을거라 생각합니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '..', '다 풀으라고 해서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['3-1 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '기술 된 상황에 몰입하기 어려웠다', '문제 분석과 해결을 위한 역량을 어떻게 쌓아야 할지 다소 막연했고, 정답이나 모범 답안이 없는 문제와 같이 느껴져서 더 어려웠음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 9, 샘플 키: ['-', 'ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', 'ASIL 레벨 별 TASK 의 분리', '서술형 1번에 좀 더 적합했을 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '그럴 수도 있으니....', '실제 프로젝트 환경에서는 모듈 간의 상호 동작을 통한 성능과 복잡도도 중요함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '15-4와 동일 답변', 'AP BSP 업무를 하면서 CPU / DDR MEMORY 사용 현황 및 그에 따른 문제점을 프로젝트 설계 단계에서 고민하나, MCU 와 같이 CPU / MEMORY 100% 인 상황을 고려하고 단일 S/W 을 설계하지 않습니다. AP BSP 에서는 수십개의 프로세스가 FOREGROUND / BACKGROUND 로 동작하기에 현업에서는 조금 더 추상적인 범위 내에서 설계 및 문제점 파악을 하고 있는 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', 'SW구조에 대해 볼 수 있었습니다.', '기능안전, aspice 달성 중 sw아키텍처는 일부일 뿐이다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '15-2와 동일 답변', '3번의 데이터가 그렇게 측정된 단서를 제공하기 때문에']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'CYCLOMATIC COMPLEXITY 개념만 제외하고는 S/W 현업에서 일반적으로 고려한 상황 및 요소라고 생각합니다.', '각 모듈 별 정보들이 상세해서 필요한 정보라고 판단하였다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1', '2']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '기능안전을 의도한 내용 같은데 크게 와 닿지 않았다', '모듈의 순서도 등이 흡사하다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-4와 동일 답변', 'EA를 작성할때에 유사한 아키텍쳐 구조였습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '14-2 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 7, 샘플 키: ['-', '20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, A-SPICE 표준이었음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1', '2']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '10', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '10', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '10', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'ASPICE LV2 및 ASIL-D 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASIL-D 와 A-SPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-2 체감난이도(3번) (주관식)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '8. 시험시간 적절성', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '상/중/하위권', '성함', '점수대', '참여여부', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 1. 업무경력, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 10-2 시나리오 전반의견
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 11-1 (과제1) 서술형선택, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 12-1 체감난이도(1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 12-1 체감난이도(1번).1, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 12-3 문항 내용적절성(1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-3. 문제 해결력 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-3. 문제 해결력 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 2-1. 개발 분야 경력 , 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 2-2. PL급 이상 경력, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 25-1. 성취수준, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 25-1. 성취수준(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 26. 시험관련 하고싶은 말, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 4. 경험한 국제표준(중복), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 5. 사용언어, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 8. 시험시간 적절성, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 9-2 체감난이도(서술), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 상/중/하위권, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 성함, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 점수대, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 참여여부, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 통과여부(70%적용), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-1 시나리오(실제상황 연관성)', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-1 체감난이도(3번)', '19-2 체감난이도(3번) (주관식)', '19-3 문항 내용적절성 (3번)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '20-1. 지식이해 암기 중요도 (3번)', '20-2. 자료 해석(분석)중요도 (3번)', '20-3. 문제 해결력 (3번)', '20-4. 전략적 판단력 (3번)', '21-1 (시나리오) project 환경_실무유사도 (3번)', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-3 (시나리오) project 환경_자료활용도 (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '24-1. (Essential과 비교) 체감난이도', '24-2. (Essential과 비교) 지식이해/암기', '24-3. (Essential과 비교) 자료해석', '24-4. (Essential과 비교) 문제해결', '24-5. (Essential과 비교) 전략적판단', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '9-1 체감난이도(출제전반)', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '과제1-1', '과제1-2', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 10-1 시나리오(실제상황 연관성), 값 타입: int
  - 키: 10-2 시나리오 전반의견
, 값 타입: int
  - 키: 11-1 (과제1) 서술형선택, 값 타입: int
  - 키: 12-1 체감난이도(1번), 값 타입: int
  - 키: 12-1 체감난이도(1번).1, 값 타입: int
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: int
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: int
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: int
  - 키: 12-3 문항 내용적절성(1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 13-3. 문제 해결력 (1번), 값 타입: int
  - 키: 13-3. 문제 해결력 (2번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 19-1 체감난이도(3번), 값 타입: int
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: int
  - 키: 19-3 문항 내용적절성 (3번), 값 타입: int
  - 키: 2-1. 개발 분야 경력 , 값 타입: int
  - 키: 2-2. PL급 이상 경력, 값 타입: int
  - 키: 20-1. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 20-2. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 20-3. 문제 해결력 (3번), 값 타입: int
  - 키: 20-4. 전략적 판단력 (3번), 값 타입: int
  - 키: 21-1 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 21-3 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 24-1. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 24-2. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 24-3. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 24-4. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 24-5. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 25-1. 성취수준, 값 타입: int
  - 키: 25-1. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 9-1 체감난이도(출제전반), 값 타입: int
  - 키: 9-2 체감난이도(서술), 값 타입: int
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제1-1, 값 타입: int
  - 키: 과제1-2, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 69
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 24
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력', '10-1 시나리오(실제상황 연관성)', '10-2 시나리오 전반의견\n', '11-1 (과제1) 서술형선택', '12-1 체감난이도(1번)', '12-1 체감난이도(1번).1', '12-2 체감난이도(1번) (주관식)', '12-2 체감난이도(1번)(주관식)', '12-3 문항 내용적절성 (2번)', '12-3 문항 내용적절성(1번)', '13-1. 지식이해 암기 중요도 (1번)', '13-1. 지식이해 암기 중요도 (2번)', '13-2. 자료 해석(분석)중요도 (1번)', '13-2. 자료 해석(분석)중요도 (2번)', '13-3. 문제 해결력 (1번)', '13-3. 문제 해결력 (2번)', '13-4. 전략적 판단력 (1번)', '13-4. 전략적 판단력 (2번)', '14-1 (시나리오) project 환경_실무유사도 (1번)', '14-1 (시나리오) project 환경_실무유사도 (2번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (1번)', '14-2 (시나리오) project 환경_실무유사도(주관식) (2번)', '14-3 (시나리오) project 환경_자료활용도 (1번)', '14-3 (시나리오) project 환경_자료활용도 (2번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (1번)', '14-4 (시나리오) project 환경_자료활용도(주관식) (2번)', '15-1 (시나리오) project Architecture_실무유사도 (1번)', '15-1 (시나리오) project Architecture_실무유사도 (2번)', '15-1 (시나리오) project Architecture_실무유사도(주관식) (1번)', '15-2 (시나리오) project Architecture_실무유사도(주관식) (2번)', '15-3 (시나리오) project Architecture_자료활용도 (1번)', '15-3 (시나리오) project Architecture_자료활용도 2번)', '15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (1번)', '15-4 (시나리오) project Architecture_자료활용도(주관식) (2번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '18-1. 과제2_하위문항풀이여부', '18-2. 과제2_하위문항풀이여부(주관식)', '19-1 체감난이도(3번)', '19-2 체감난이도(3번) (주관식)', '19-3 문항 내용적절성 (3번)', '2-1. 개발 분야 경력 ', '2-2. PL급 이상 경력', '20-1. 지식이해 암기 중요도 (3번)', '20-2. 자료 해석(분석)중요도 (3번)', '20-3. 문제 해결력 (3번)', '20-4. 전략적 판단력 (3번)', '21-1 (시나리오) project 환경_실무유사도 (3번)', '21-2 (시나리오) project 환경_실무유사도(주관식) (3번)', '21-3 (시나리오) project 환경_자료활용도 (3번)', '21-4 (시나리오) project 환경_자료활용도(주관식) (3번)', '22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '24-1. (Essential과 비교) 체감난이도', '24-2. (Essential과 비교) 지식이해/암기', '24-3. (Essential과 비교) 자료해석', '24-4. (Essential과 비교) 문제해결', '24-5. (Essential과 비교) 전략적판단', '25-1. 성취수준', '25-1. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '9-1 체감난이도(출제전반)', '9-2 체감난이도(서술)', '9-3 난이도 적절성(Advanced로서)\n', '과제1-1', '과제1-2', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (11-2) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 10-1 시나리오(실제상황 연관성), 값 타입: int
  - 키: 10-2 시나리오 전반의견
, 값 타입: int
  - 키: 11-1 (과제1) 서술형선택, 값 타입: int
  - 키: 12-1 체감난이도(1번), 값 타입: int
  - 키: 12-1 체감난이도(1번).1, 값 타입: int
  - 키: 12-2 체감난이도(1번) (주관식), 값 타입: int
  - 키: 12-2 체감난이도(1번)(주관식), 값 타입: int
  - 키: 12-3 문항 내용적절성 (2번), 값 타입: int
  - 키: 12-3 문항 내용적절성(1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 13-1. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 13-2. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 13-3. 문제 해결력 (1번), 값 타입: int
  - 키: 13-3. 문제 해결력 (2번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (1번), 값 타입: int
  - 키: 13-4. 전략적 판단력 (2번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 14-1 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 14-2 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 14-3 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 14-4 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 15-1 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-2 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 15-3 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 15-3 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 15-4 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-1 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 16-2 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 16-3 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 16-4 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 18-1. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 18-2. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 19-1 체감난이도(3번), 값 타입: int
  - 키: 19-2 체감난이도(3번) (주관식), 값 타입: int
  - 키: 19-3 문항 내용적절성 (3번), 값 타입: int
  - 키: 2-1. 개발 분야 경력 , 값 타입: int
  - 키: 2-2. PL급 이상 경력, 값 타입: int
  - 키: 20-1. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 20-2. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 20-3. 문제 해결력 (3번), 값 타입: int
  - 키: 20-4. 전략적 판단력 (3번), 값 타입: int
  - 키: 21-1 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 21-2 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 21-3 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 21-4 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22-1 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 22-2 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 22-3 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 22-4 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 24-1. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 24-2. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 24-3. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 24-4. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 24-5. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 25-1. 성취수준, 값 타입: int
  - 키: 25-1. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 9-1 체감난이도(출제전반), 값 타입: int
  - 키: 9-2 체감난이도(서술), 값 타입: int
  - 키: 9-3 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제1-1, 값 타입: int
  - 키: 과제1-2, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 69
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 24
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 69
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 24
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 100


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 100


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 100


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 100


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['상관관계 매트릭스']
  - 키: 상관관계 매트릭스, 값 타입: dict, 키 수: 4, 샘플 키: ['행 수', '열 수', '변수']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['상관관계 매트릭스']
  - 키: 상관관계 매트릭스, 값 타입: dict, 키 수: 4, 샘플 키: ['행 수', '열 수', '변수']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 100


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 100


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 6
  - 키: data, 값 타입: list, 길이: 5
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 6
  - 키: data, 값 타입: list, 길이: 5
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 100


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 100


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: int
  - 키: 교육연수, 값 타입: int
  - 키: 나이, 값 타입: int
  - 키: 만족도, 값 타입: int
  - 키: 소득, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 5


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 5
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 25
  - 키: data, 값 타입: list, 길이: 24
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 25
  - 키: data, 값 타입: list, 길이: 24
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 25
  - 키: data, 값 타입: list, 길이: 24
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 25
  - 키: data, 값 타입: list, 길이: 24
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 69
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 0
  - 키: column_names, 값 타입: list, 길이: 5
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 5, 샘플 키: ['경력연수', '교육연수', '나이']
  - 키: numeric_columns, 값 타입: list, 길이: 5
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 교육연수, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 나이, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 만족도, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 소득, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['경력연수', '교육연수', '나이', '만족도', '소득']
  - 키: 경력연수, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 교육연수, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 나이, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 만족도, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 소득, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 6
  - 키: data, 값 타입: list, 길이: 5
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 6
  - 키: data, 값 타입: list, 길이: 5
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 100


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 100


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 25
  - 키: data, 값 타입: list, 길이: 24
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 25
  - 키: data, 값 타입: list, 길이: 24
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 쉬움', '약간 어려움', '적절함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 쉬움', '약간 어려움', '적절함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 24
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'ASPICE LV2 및 ASIL-D 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'ASPICE LV2 및 ASIL-D 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'ASPICE LV2 및 ASIL-D 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 56
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 56
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 56
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(11-2) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 38
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', '-', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', '-', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '100%를 달성했다고 하더라도 리얼 월드에서의 적용은 또 다른 문제인 것 같고, 일정/인력 등의 자원과 커뮤니케이션은 실전에서 또 다름', '70% 정도는 갖추어야 어느 정도 문제 출제 의도에 맞는 행동을 현업에서도 할 수 있다고 생각합니다. 나머지 30%는 현업 분야와 조직, 양산 아이템에 따라 대응 방향과 전략이 다를 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', '2번같이 외워야하는 문제보단 3번같이 암기보단 응용할 수 있는 문제 위주로 출제가 되었으면 좋겠습니다.', '관련 교육을 이수하지 않는 다면 문제가 너무 추상적으로 느껴질 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASIL-D 와 A-SPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['-', 'ASPICE LV2 및 ASIL-D 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['-', '2', '3']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '2', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['-', '4', '5']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['-', '3', '4']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)', '과제 1을 수행할 수 있는 교육이나 교제를 주시면 어떻게 하는지를 알 수는 있을 것 같습니다. ']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)', '과제 1을 수행할 수 있는 교육이나 교제를 주시면 어떻게 하는지를 알 수는 있을 것 같습니다. ']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['기술 된 상황에 몰입하기 어려웠다', '문제 분석과 해결을 위한 역량을 어떻게 쌓아야 할지 다소 막연했고, 정답이나 모범 답안이 없는 문제와 같이 느껴져서 더 어려웠음', '없습니다~!']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['31 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['..', '다 풀으라고 해서', '두 개 다 작성 했다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 잘 모르는 내용이었습니다.', 'ASpice의 프로세스와 SW 공학을 응용하는 문제라', 'ISO26262 및 ASPICE 획득 프로젝트를 경험한 인원이면 매우 쉽게 접근 했을거라 생각합니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만', '5년 이상']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['AI,인지 관련 환경은 잘 모르겠습니다.', 'SW와 HW 통합이라는 건 사실 매 SW 개발 시마다 이루어지기 때문에, 현실과 다르다. 차라리 서로 다른 SW 간 통합을 한다는 게 더 어울린다.', '선행 개발 프로젝트를 진행하면서 ASILB 등급에 대한 프로젝트를 경험해본적이 없음. 관련 교육도 부족하여 참여해본 적이 없음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약', '문제를 잘 못풀어서 모르겠음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1년 미만', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['?', 'ASPICE 가 필요한 분야가 아닌 곳에서 개발을 진행하고 있음', 'ASPICE를 잘 몰라 기술하기 어렵습니다. ']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE 교육 필요', 'ASPICE 프로세스를 설명하는 일반적인 그림', 'ASPICE를 잘 몰라 기술하기 어렵습니다. ']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.', 'ASPICE를 잘 모릅니다. 가르쳐 주시고 평가하심이....']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['100%를 달성했다고 하더라도 리얼 월드에서의 적용은 또 다른 문제인 것 같고, 일정/인력 등의 자원과 커뮤니케이션은 실전에서 또 다름', '70% 정도는 갖추어야 어느 정도 문제 출제 의도에 맞는 행동을 현업에서도 할 수 있다고 생각합니다. 나머지 30%는 현업 분야와 조직, 양산 아이템에 따라 대응 방향과 전략이 다를 것 같습니다.', 'PL 으로서의 역량은 이렇게 시험으로 치뤄지는것이 아니라 커뮤니케이션 능력입니다.\n이는 종이 시험으로는 판별할 수 없는 별개의 영역입니다.\n따라서 시험을 잘 쳤다고 좋은 PL이 될수도 없고, 시험을 못 쳤다고 나쁜 PL이 될 수도 없습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['2번같이 외워야하는 문제보단 3번같이 암기보단 응용할 수 있는 문제 위주로 출제가 되었으면 좋겠습니다.', 'SW 아카데미를 시험장소 및 교육장소로 많이 활용되고 있는데, 주차 지원이 되었으면 좋겠습니다...', '관련 교육을 이수하지 않는 다면 문제가 너무 추상적으로 느껴질 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['경험은 없으나 이론적 지식은 있음', '경험이 없으며 내용도 잘 알지 못함', '상급자 지도 하에 보조적 업무 수행 경험 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: [' ', 'ASPICE, 사이버 보안 (ISO/SAE  21434)', 'ASPICE, 사이버 보안 (ISO/SAE  21434), AUTOSAR']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, C++', 'C, C++, JAVA']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 여유로웠다', '매우 여유로웠다', '적절했다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ISO26262 혹은 ASPICE 관련 상세 기준에 대한 내용은 보통 레퍼런스를 참조하기에, 해당 내용을 외우고 있는것이 아니다 보니, 시험 문제를 풀기에 다소 어려웠습니다.  ', 'ISO26262나 ASPICE의 지식 뿐만 아니라, 실재 설계 업무 경험으로 풀 수 있는 문제였음', 'ISO26262와 ASPICE가 범위가 방대하며 실무에서 다루어본적이 없어서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 쉬움', '약간 어려움', '적절함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['상위권', '중위권', '하위권']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['권민안', '김관수', '김세현']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['20250401  2:00:37 PM', '20250401  2:04:29 PM', '20250401  2:08:41 PM']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0점', '100점이상', '10점대']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 1, 샘플 키: ['예']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.', '본인의 업무와 연관이 깊다면 답변이 쉬울것 같음, 체점의 공정한 기준이 제공되었으면 함. 어느 답변이 틀렸고, 왜 틀렸는지 설득력 있는 체점 결과가 제공되어야 한다고 생각함. 서술형 문제이기 때문에']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, ASPICE 표준이었음', '앞설문과 동일']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['142 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용', 'ASIL level이 답변 작성에 영향을 미침']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌', '서술형 1번을 풀었을 때 보단 많이 연관 되었던 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 45
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 45
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 49
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 49
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.', '본인의 업무와 연관이 깊다면 답변이 쉬울것 같음, 체점의 공정한 기준이 제공되었으면 함. 어느 답변이 틀렸고, 왜 틀렸는지 설득력 있는 체점 결과가 제공되어야 한다고 생각함. 서술형 문제이기 때문에']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.', '본인의 업무와 연관이 깊다면 답변이 쉬울것 같음, 체점의 공정한 기준이 제공되었으면 함. 어느 답변이 틀렸고, 왜 틀렸는지 설득력 있는 체점 결과가 제공되어야 한다고 생각함. 서술형 문제이기 때문에']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, ASPICE 표준이었음', '앞설문과 동일']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['142 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용', 'ASIL level이 답변 작성에 영향을 미침']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌', '서술형 1번을 풀었을 때 보단 많이 연관 되었던 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['144와 동일 답변', 'EA를 작성할때에 유사한 아키텍쳐 구조였습니다.', '단순 다이어그램만 있고 읽고 쓰고가 표현되지 않음. 순서인지 타이밍인지도 모르겠음. UML을 사용하지 않았다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['기능안전을 의도한 내용 같은데 크게 와 닿지 않았다', '모듈의 순서도 등이 흡사하다.', '문제 아키텍처의 복잡도가 좀 더 낮음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['CYCLOMATIC COMPLEXITY 개념만 제외하고는 S/W 현업에서 일반적으로 고려한 상황 및 요소라고 생각합니다.', '각 모듈 별 정보들이 상세해서 필요한 정보라고 판단하였다.', '답하는데 많이 사용하지 않았다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['152와 동일 답변', '3번의 데이터가 그렇게 측정된 단서를 제공하기 때문에', 'ASIL level을 만족시키기 위해, 아키텍처적인 검토가 많이 필요했기 때문.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['SW구조에 대해 볼 수 있었습니다.', '기능안전, aspice 달성 중 sw아키텍처는 일부일 뿐이다', '모듈 간 상호 영향성에 대한 정보 제공']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['154와 동일 답변', 'AP BSP 업무를 하면서 CPU / DDR MEMORY 사용 현황 및 그에 따른 문제점을 프로젝트 설계 단계에서 고민하나, MCU 와 같이 CPU / MEMORY 100% 인 상황을 고려하고 단일 S/W 을 설계하지 않습니다. AP BSP 에서는 수십개의 프로세스가 FOREGROUND / BACKGROUND 로 동작하기에 현업에서는 조금 더 추상적인 범위 내에서 설계 및 문제점 파악을 하고 있는 것 같습니다.', '데이터를 많이 사용한다고 복잡도가 높은거는 잘 모르겠음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['그럴 수도 있으니....', '실제 프로젝트 환경에서는 모듈 간의 상호 동작을 통한 성능과 복잡도도 중요함', '앞설문과 동일.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['ASIL 레벨 별 TASK 의 분리', '서술형 1번에 좀 더 적합했을 것 같습니다.', '서술형 1번을 푸는데 좀 더 중요한 단서라고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)', '과제 1을 수행할 수 있는 교육이나 교제를 주시면 어떻게 하는지를 알 수는 있을 것 같습니다. ']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['기술 된 상황에 몰입하기 어려웠다', '문제 분석과 해결을 위한 역량을 어떻게 쌓아야 할지 다소 막연했고, 정답이나 모범 답안이 없는 문제와 같이 느껴져서 더 어려웠음', '없습니다~!']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['31 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['..', '다 풀으라고 해서', '두 개 다 작성 했다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 잘 모르는 내용이었습니다.', 'ASpice의 프로세스와 SW 공학을 응용하는 문제라', 'ISO26262 및 ASPICE 획득 프로젝트를 경험한 인원이면 매우 쉽게 접근 했을거라 생각합니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만', '5년 이상']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['AI,인지 관련 환경은 잘 모르겠습니다.', 'SW와 HW 통합이라는 건 사실 매 SW 개발 시마다 이루어지기 때문에, 현실과 다르다. 차라리 서로 다른 SW 간 통합을 한다는 게 더 어울린다.', '선행 개발 프로젝트를 진행하면서 ASILB 등급에 대한 프로젝트를 경험해본적이 없음. 관련 교육도 부족하여 참여해본 적이 없음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약', '문제를 잘 못풀어서 모르겠음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1년 미만', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['?', 'ASPICE 가 필요한 분야가 아닌 곳에서 개발을 진행하고 있음', 'ASPICE를 잘 몰라 기술하기 어렵습니다. ']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE 교육 필요', 'ASPICE 프로세스를 설명하는 일반적인 그림', 'ASPICE를 잘 몰라 기술하기 어렵습니다. ']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.', 'ASPICE를 잘 모릅니다. 가르쳐 주시고 평가하심이....']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['100%를 달성했다고 하더라도 리얼 월드에서의 적용은 또 다른 문제인 것 같고, 일정/인력 등의 자원과 커뮤니케이션은 실전에서 또 다름', '70% 정도는 갖추어야 어느 정도 문제 출제 의도에 맞는 행동을 현업에서도 할 수 있다고 생각합니다. 나머지 30%는 현업 분야와 조직, 양산 아이템에 따라 대응 방향과 전략이 다를 것 같습니다.', 'PL 으로서의 역량은 이렇게 시험으로 치뤄지는것이 아니라 커뮤니케이션 능력입니다.\n이는 종이 시험으로는 판별할 수 없는 별개의 영역입니다.\n따라서 시험을 잘 쳤다고 좋은 PL이 될수도 없고, 시험을 못 쳤다고 나쁜 PL이 될 수도 없습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['2번같이 외워야하는 문제보단 3번같이 암기보단 응용할 수 있는 문제 위주로 출제가 되었으면 좋겠습니다.', 'SW 아카데미를 시험장소 및 교육장소로 많이 활용되고 있는데, 주차 지원이 되었으면 좋겠습니다...', '관련 교육을 이수하지 않는 다면 문제가 너무 추상적으로 느껴질 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['경험은 없으나 이론적 지식은 있음', '경험이 없으며 내용도 잘 알지 못함', '상급자 지도 하에 보조적 업무 수행 경험 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: [' ', 'ASPICE, 사이버 보안 (ISO/SAE  21434)', 'ASPICE, 사이버 보안 (ISO/SAE  21434), AUTOSAR']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, C++', 'C, C++, JAVA']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 여유로웠다', '매우 여유로웠다', '적절했다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ISO26262 혹은 ASPICE 관련 상세 기준에 대한 내용은 보통 레퍼런스를 참조하기에, 해당 내용을 외우고 있는것이 아니다 보니, 시험 문제를 풀기에 다소 어려웠습니다.  ', 'ISO26262나 ASPICE의 지식 뿐만 아니라, 실재 설계 업무 경험으로 풀 수 있는 문제였음', 'ISO26262와 ASPICE가 범위가 방대하며 실무에서 다루어본적이 없어서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 쉬움', '약간 어려움', '적절함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['상위권', '중위권', '하위권']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['권민안', '김관수', '김세현']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['20250401  2:00:37 PM', '20250401  2:04:29 PM', '20250401  2:08:41 PM']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['0점', '100점이상', '10점대']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 1, 샘플 키: ['예']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 2, 샘플 키: ['과제1 통과', '통과과제 없음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['101 시나리오(실제상황 연관성)', '121 체감난이도(1번)', '121 체감난이도(1번).1', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '191 체감난이도(3번)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '211 (시나리오) project 환경_실무유사도 (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '7.소요시간', '91 체감난이도(출제전반)', '과제11', '과제12', '과제2', '사번', '순위', '총점']
  - 키: 101 시나리오(실제상황 연관성), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 121 체감난이도(1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 121 체감난이도(1번).1, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 123 문항 내용적절성 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 123 문항 내용적절성(1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 133. 문제 해결력 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 133. 문제 해결력 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 134. 전략적 판단력 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 134. 전략적 판단력 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 191 체감난이도(3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 193 문항 내용적절성 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 203. 문제 해결력 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 204. 전략적 판단력 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 251. 성취수준, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 7.소요시간, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 91 체감난이도(출제전반), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 과제11, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 과제12, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 과제2, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 사번, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 순위, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 총점, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['상위권', '중위권', '하위권']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['상위권', '중위권', '하위권']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['권민안', '김관수', '김세현']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['권민안', '김관수', '김세현']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['20250401  2:00:37 PM', '20250401  2:04:29 PM', '20250401  2:08:41 PM']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['20250401  2:00:37 PM', '20250401  2:04:29 PM', '20250401  2:08:41 PM']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['100%를 달성했다고 하더라도 리얼 월드에서의 적용은 또 다른 문제인 것 같고, 일정/인력 등의 자원과 커뮤니케이션은 실전에서 또 다름', '70% 정도는 갖추어야 어느 정도 문제 출제 의도에 맞는 행동을 현업에서도 할 수 있다고 생각합니다. 나머지 30%는 현업 분야와 조직, 양산 아이템에 따라 대응 방향과 전략이 다를 것 같습니다.', 'PL 으로서의 역량은 이렇게 시험으로 치뤄지는것이 아니라 커뮤니케이션 능력입니다.\n이는 종이 시험으로는 판별할 수 없는 별개의 영역입니다.\n따라서 시험을 잘 쳤다고 좋은 PL이 될수도 없고, 시험을 못 쳤다고 나쁜 PL이 될 수도 없습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['100%를 달성했다고 하더라도 리얼 월드에서의 적용은 또 다른 문제인 것 같고, 일정/인력 등의 자원과 커뮤니케이션은 실전에서 또 다름', '70% 정도는 갖추어야 어느 정도 문제 출제 의도에 맞는 행동을 현업에서도 할 수 있다고 생각합니다. 나머지 30%는 현업 분야와 조직, 양산 아이템에 따라 대응 방향과 전략이 다를 것 같습니다.', 'PL 으로서의 역량은 이렇게 시험으로 치뤄지는것이 아니라 커뮤니케이션 능력입니다.\n이는 종이 시험으로는 판별할 수 없는 별개의 영역입니다.\n따라서 시험을 잘 쳤다고 좋은 PL이 될수도 없고, 시험을 못 쳤다고 나쁜 PL이 될 수도 없습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약', '문제를 잘 못풀어서 모르겠음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약', '문제를 잘 못풀어서 모르겠음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['header', 'data', 'type']
  - 키: header, 값 타입: list, 길이: 50
  - 키: data, 값 타입: list, 길이: 49
  - 키: type, 값 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 25


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 25


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 21


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 21


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 25


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 25


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 21


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 21


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 25


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 49
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 49
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.', '본인의 업무와 연관이 깊다면 답변이 쉬울것 같음, 체점의 공정한 기준이 제공되었으면 함. 어느 답변이 틀렸고, 왜 틀렸는지 설득력 있는 체점 결과가 제공되어야 한다고 생각함. 서술형 문제이기 때문에']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['sw 개발 보다는 pmp 느낌이 난다', '과제1 의 경우 MCU 상에서 구현 설명 및 질의 인데, AP(CPU) 상에서 개발을 해왔기 때문에 실제 MCU에서 프로세스 동작 방법과 구현 방향에 모르기에 생소했다.', '본인의 업무와 연관이 깊다면 답변이 쉬울것 같음, 체점의 공정한 기준이 제공되었으면 함. 어느 답변이 틀렸고, 왜 틀렸는지 설득력 있는 체점 결과가 제공되어야 한다고 생각함. 서술형 문제이기 때문에']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 21


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 25


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['31 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['31 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 6, 샘플 키: ['20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, ASPICE 표준이었음', '앞설문과 동일']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['142 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용', 'ASIL level이 답변 작성에 영향을 미침']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌', '서술형 1번을 풀었을 때 보단 많이 연관 되었던 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['144와 동일 답변', 'EA를 작성할때에 유사한 아키텍쳐 구조였습니다.', '단순 다이어그램만 있고 읽고 쓰고가 표현되지 않음. 순서인지 타이밍인지도 모르겠음. UML을 사용하지 않았다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['기능안전을 의도한 내용 같은데 크게 와 닿지 않았다', '모듈의 순서도 등이 흡사하다.', '문제 아키텍처의 복잡도가 좀 더 낮음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['CYCLOMATIC COMPLEXITY 개념만 제외하고는 S/W 현업에서 일반적으로 고려한 상황 및 요소라고 생각합니다.', '각 모듈 별 정보들이 상세해서 필요한 정보라고 판단하였다.', '답하는데 많이 사용하지 않았다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['152와 동일 답변', '3번의 데이터가 그렇게 측정된 단서를 제공하기 때문에', 'ASIL level을 만족시키기 위해, 아키텍처적인 검토가 많이 필요했기 때문.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['SW구조에 대해 볼 수 있었습니다.', '기능안전, aspice 달성 중 sw아키텍처는 일부일 뿐이다', '모듈 간 상호 영향성에 대한 정보 제공']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['154와 동일 답변', 'AP BSP 업무를 하면서 CPU / DDR MEMORY 사용 현황 및 그에 따른 문제점을 프로젝트 설계 단계에서 고민하나, MCU 와 같이 CPU / MEMORY 100% 인 상황을 고려하고 단일 S/W 을 설계하지 않습니다. AP BSP 에서는 수십개의 프로세스가 FOREGROUND / BACKGROUND 로 동작하기에 현업에서는 조금 더 추상적인 범위 내에서 설계 및 문제점 파악을 하고 있는 것 같습니다.', '데이터를 많이 사용한다고 복잡도가 높은거는 잘 모르겠음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['그럴 수도 있으니....', '실제 프로젝트 환경에서는 모듈 간의 상호 동작을 통한 성능과 복잡도도 중요함', '앞설문과 동일.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['ASIL 레벨 별 TASK 의 분리', '서술형 1번에 좀 더 적합했을 것 같습니다.', '서술형 1번을 푸는데 좀 더 중요한 단서라고 생각 됨']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 8, 샘플 키: ['ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)', '과제 1을 수행할 수 있는 교육이나 교제를 주시면 어떻게 하는지를 알 수는 있을 것 같습니다. ']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['기술 된 상황에 몰입하기 어려웠다', '문제 분석과 해결을 위한 역량을 어떻게 쌓아야 할지 다소 막연했고, 정답이나 모범 답안이 없는 문제와 같이 느껴져서 더 어려웠음', '없습니다~!']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['31 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['..', '다 풀으라고 해서', '두 개 다 작성 했다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 잘 모르는 내용이었습니다.', 'ASpice의 프로세스와 SW 공학을 응용하는 문제라', 'ISO26262 및 ASPICE 획득 프로젝트를 경험한 인원이면 매우 쉽게 접근 했을거라 생각합니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만', '5년 이상']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['AI,인지 관련 환경은 잘 모르겠습니다.', 'SW와 HW 통합이라는 건 사실 매 SW 개발 시마다 이루어지기 때문에, 현실과 다르다. 차라리 서로 다른 SW 간 통합을 한다는 게 더 어울린다.', '선행 개발 프로젝트를 진행하면서 ASILB 등급에 대한 프로젝트를 경험해본적이 없음. 관련 교육도 부족하여 참여해본 적이 없음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['대응전략과 현재이슈 그리고개발단계라는 정보가 중요했다.', '문제 요약', '문제를 잘 못풀어서 모르겠음.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['1년 미만', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['?', 'ASPICE 가 필요한 분야가 아닌 곳에서 개발을 진행하고 있음', 'ASPICE를 잘 몰라 기술하기 어렵습니다. ']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE 교육 필요', 'ASPICE 프로세스를 설명하는 일반적인 그림', 'ASPICE를 잘 몰라 기술하기 어렵습니다. ']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.', 'ASPICE를 잘 모릅니다. 가르쳐 주시고 평가하심이....']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['100%를 달성했다고 하더라도 리얼 월드에서의 적용은 또 다른 문제인 것 같고, 일정/인력 등의 자원과 커뮤니케이션은 실전에서 또 다름', '70% 정도는 갖추어야 어느 정도 문제 출제 의도에 맞는 행동을 현업에서도 할 수 있다고 생각합니다. 나머지 30%는 현업 분야와 조직, 양산 아이템에 따라 대응 방향과 전략이 다를 것 같습니다.', 'PL 으로서의 역량은 이렇게 시험으로 치뤄지는것이 아니라 커뮤니케이션 능력입니다.\n이는 종이 시험으로는 판별할 수 없는 별개의 영역입니다.\n따라서 시험을 잘 쳤다고 좋은 PL이 될수도 없고, 시험을 못 쳤다고 나쁜 PL이 될 수도 없습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['2번같이 외워야하는 문제보단 3번같이 암기보단 응용할 수 있는 문제 위주로 출제가 되었으면 좋겠습니다.', 'SW 아카데미를 시험장소 및 교육장소로 많이 활용되고 있는데, 주차 지원이 되었으면 좋겠습니다...', '관련 교육을 이수하지 않는 다면 문제가 너무 추상적으로 느껴질 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['경험은 없으나 이론적 지식은 있음', '경험이 없으며 내용도 잘 알지 못함', '상급자 지도 하에 보조적 업무 수행 경험 있음']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: [' ', 'ASPICE, 사이버 보안 (ISO/SAE  21434)', 'ASPICE, 사이버 보안 (ISO/SAE  21434), AUTOSAR']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, C++', 'C, C++, JAVA']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 여유로웠다', '매우 여유로웠다', '적절했다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ISO26262 혹은 ASPICE 관련 상세 기준에 대한 내용은 보통 레퍼런스를 참조하기에, 해당 내용을 외우고 있는것이 아니다 보니, 시험 문제를 풀기에 다소 어려웠습니다.  ', 'ISO26262나 ASPICE의 지식 뿐만 아니라, 실재 설계 업무 경험으로 풀 수 있는 문제였음', 'ISO26262와 ASPICE가 범위가 방대하며 실무에서 다루어본적이 없어서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 쉬움', '약간 어려움', '적절함']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ISO26262 혹은 ASPICE 관련 상세 기준에 대한 내용은 보통 레퍼런스를 참조하기에, 해당 내용을 외우고 있는것이 아니다 보니, 시험 문제를 풀기에 다소 어려웠습니다.  ', 'ISO26262나 ASPICE의 지식 뿐만 아니라, 실재 설계 업무 경험으로 풀 수 있는 문제였음', 'ISO26262와 ASPICE가 범위가 방대하며 실무에서 다루어본적이 없어서']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 여유로웠다', '매우 여유로웠다', '적절했다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, C++', 'C, C++, JAVA']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 21


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 25


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['144와 동일 답변', 'EA를 작성할때에 유사한 아키텍쳐 구조였습니다.', '단순 다이어그램만 있고 읽고 쓰고가 표현되지 않음. 순서인지 타이밍인지도 모르겠음. UML을 사용하지 않았다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['144와 동일 답변', 'EA를 작성할때에 유사한 아키텍쳐 구조였습니다.', '단순 다이어그램만 있고 읽고 쓰고가 표현되지 않음. 순서인지 타이밍인지도 모르겠음. UML을 사용하지 않았다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['152와 동일 답변', '3번의 데이터가 그렇게 측정된 단서를 제공하기 때문에', 'ASIL level을 만족시키기 위해, 아키텍처적인 검토가 많이 필요했기 때문.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['152와 동일 답변', '3번의 데이터가 그렇게 측정된 단서를 제공하기 때문에', 'ASIL level을 만족시키기 위해, 아키텍처적인 검토가 많이 필요했기 때문.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌', '서술형 1번을 풀었을 때 보단 많이 연관 되었던 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 5, 샘플 키: ['2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌', '서술형 1번을 풀었을 때 보단 많이 연관 되었던 것 같습니다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현', '아키텍처 설계, 상세 설계, 코딩/구현, 테스트/검증']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 49
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 49
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 45
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 45
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 45
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 49
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 45
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 49
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['CYCLOMATIC COMPLEXITY 개념만 제외하고는 S/W 현업에서 일반적으로 고려한 상황 및 요소라고 생각합니다.', '각 모듈 별 정보들이 상세해서 필요한 정보라고 판단하였다.', '답하는데 많이 사용하지 않았다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['CYCLOMATIC COMPLEXITY 개념만 제외하고는 S/W 현업에서 일반적으로 고려한 상황 및 요소라고 생각합니다.', '각 모듈 별 정보들이 상세해서 필요한 정보라고 판단하였다.', '답하는데 많이 사용하지 않았다']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 45
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 49
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 45
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 49
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 45
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 45
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 45
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 49
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 45
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 49
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 45
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 45
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 45
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 49
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['categorical_columns', 'column_names', 'columns', 'missing_values', 'numeric_columns', 'rows']
  - 키: categorical_columns, 값 타입: list, 길이: 45
  - 키: column_names, 값 타입: list, 길이: 94
  - 키: columns, 값 타입: int
  - 키: missing_values, 값 타입: dict, 키 수: 94, 샘플 키: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력']
  - 키: numeric_columns, 값 타입: list, 길이: 49
  - 키: rows, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '192 체감난이도(3번) (주관식)', '21. 개발 분야 경력 ', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '8. 시험시간 적절성', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '상/중/하위권', '성함', '응답제출시간', '점수대', '참여여부', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 1. 업무경력, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 102 시나리오 전반의견
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 111 (과제1) 서술형선택, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 122 체감난이도(1번) (주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 122 체감난이도(1번)(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 192 체감난이도(3번) (주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 21. 개발 분야 경력 , 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 22. PL급 이상 경력, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 251. 성취수준(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 26. 시험관련 하고싶은 말, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 4. 경험한 국제표준(중복), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 5. 사용언어, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 8. 시험시간 적절성, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 92 체감난이도(서술), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 상/중/하위권, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 성함, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 응답제출시간, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 점수대, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 참여여부, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 통과여부(70%적용), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '192 체감난이도(3번) (주관식)', '21. 개발 분야 경력 ', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '8. 시험시간 적절성', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '상/중/하위권', '성함', '응답제출시간', '점수대', '참여여부', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 1. 업무경력, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 102 시나리오 전반의견
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 111 (과제1) 서술형선택, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 122 체감난이도(1번) (주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 122 체감난이도(1번)(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 192 체감난이도(3번) (주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 21. 개발 분야 경력 , 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 22. PL급 이상 경력, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 251. 성취수준(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 26. 시험관련 하고싶은 말, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 4. 경험한 국제표준(중복), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 5. 사용언어, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 8. 시험시간 적절성, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 92 체감난이도(서술), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 상/중/하위권, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 성함, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 응답제출시간, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 점수대, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 참여여부, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 통과여부(70%적용), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '2번은 완벽한 지식이 있어야 답변이 가능하다고 생각하기 때문', 'ASILD 와 ASPICE 2레벨 요구사항이 무엇인지 정확히 몰라서, 서술형1번 선택']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '192 체감난이도(3번) (주관식)', '21. 개발 분야 경력 ', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '8. 시험시간 적절성', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '상/중/하위권', '성함', '응답제출시간', '점수대', '참여여부', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 1. 업무경력, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 102 시나리오 전반의견
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 111 (과제1) 서술형선택, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 122 체감난이도(1번) (주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 122 체감난이도(1번)(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 192 체감난이도(3번) (주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 21. 개발 분야 경력 , 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 22. PL급 이상 경력, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 251. 성취수준(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 26. 시험관련 하고싶은 말, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 4. 경험한 국제표준(중복), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 5. 사용언어, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 8. 시험시간 적절성, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 92 체감난이도(서술), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 상/중/하위권, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 성함, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 응답제출시간, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 점수대, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 참여여부, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 통과여부(70%적용), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '192 체감난이도(3번) (주관식)', '21. 개발 분야 경력 ', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '8. 시험시간 적절성', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '상/중/하위권', '성함', '응답제출시간', '점수대', '참여여부', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 1. 업무경력, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 102 시나리오 전반의견
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 111 (과제1) 서술형선택, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 122 체감난이도(1번) (주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 122 체감난이도(1번)(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 192 체감난이도(3번) (주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 21. 개발 분야 경력 , 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 22. PL급 이상 경력, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 251. 성취수준(주관식), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 26. 시험관련 하고싶은 말, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 4. 경험한 국제표준(중복), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 5. 사용언어, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 8. 시험시간 적절성, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 92 체감난이도(서술), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 상/중/하위권, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 성함, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 응답제출시간, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 점수대, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 참여여부, 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']
  - 키: 통과여부(70%적용), 값 타입: dict, 키 수: 6, 샘플 키: ['count', 'data_type', 'missing']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['101 시나리오(실제상황 연관성)', '121 체감난이도(1번)', '121 체감난이도(1번).1', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '191 체감난이도(3번)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '211 (시나리오) project 환경_실무유사도 (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '7.소요시간', '91 체감난이도(출제전반)', '과제11', '과제12', '과제2', '사번', '순위', '총점']
  - 키: 101 시나리오(실제상황 연관성), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 121 체감난이도(1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 121 체감난이도(1번).1, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 123 문항 내용적절성 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 123 문항 내용적절성(1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 133. 문제 해결력 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 133. 문제 해결력 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 134. 전략적 판단력 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 134. 전략적 판단력 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 191 체감난이도(3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 193 문항 내용적절성 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 203. 문제 해결력 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 204. 전략적 판단력 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 251. 성취수준, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 7.소요시간, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 91 체감난이도(출제전반), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 과제11, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 과제12, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 과제2, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 사번, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 순위, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 총점, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['101 시나리오(실제상황 연관성)', '121 체감난이도(1번)', '121 체감난이도(1번).1', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '191 체감난이도(3번)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '211 (시나리오) project 환경_실무유사도 (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '7.소요시간', '91 체감난이도(출제전반)', '과제11', '과제12', '과제2', '사번', '순위', '총점']
  - 키: 101 시나리오(실제상황 연관성), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 121 체감난이도(1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 121 체감난이도(1번).1, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 123 문항 내용적절성 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 123 문항 내용적절성(1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 133. 문제 해결력 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 133. 문제 해결력 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 134. 전략적 판단력 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 134. 전략적 판단력 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 191 체감난이도(3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 193 문항 내용적절성 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 203. 문제 해결력 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 204. 전략적 판단력 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 251. 성취수준, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 7.소요시간, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 91 체감난이도(출제전반), 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 과제11, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 과제12, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 과제2, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 사번, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 순위, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']
  - 키: 총점, 값 타입: dict, 키 수: 19, 샘플 키: ['count', 'histogram', 'kurtosis']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 45
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 45
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 94
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 49
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 49
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['144와 동일 답변', 'EA를 작성할때에 유사한 아키텍쳐 구조였습니다.', '단순 다이어그램만 있고 읽고 쓰고가 표현되지 않음. 순서인지 타이밍인지도 모르겠음. UML을 사용하지 않았다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'data_type', 'missing', 'missing_pct', 'top_values', 'unique_values']
  - 키: count, 값 타입: int64
  - 키: data_type, 값 타입: str
  - 키: missing, 값 타입: int64
  - 키: missing_pct, 값 타입: float64
  - 키: top_values, 값 타입: dict, 키 수: 10, 샘플 키: ['144와 동일 답변', 'EA를 작성할때에 유사한 아키텍쳐 구조였습니다.', '단순 다이어그램만 있고 읽고 쓰고가 표현되지 않음. 순서인지 타이밍인지도 모르겠음. UML을 사용하지 않았다.']
  - 키: unique_values, 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['count', 'histogram', 'kurtosis', 'max', 'mean', 'median', 'min', 'missing', 'missing_pct', 'q10', 'q25', 'q50', 'q75', 'q90', 'range', 'skew', 'std', 'unique_values', 'var']
  - 키: count, 값 타입: int
  - 키: histogram, 값 타입: dict, 키 수: 2, 샘플 키: ['bins', 'values']
  - 키: kurtosis, 값 타입: float
  - 키: max, 값 타입: float
  - 키: mean, 값 타입: float
  - 키: median, 값 타입: float
  - 키: min, 값 타입: float
  - 키: missing, 값 타입: int
  - 키: missing_pct, 값 타입: float
  - 키: q10, 값 타입: float
  - 키: q25, 값 타입: float
  - 키: q50, 값 타입: float
  - 키: q75, 값 타입: float
  - 키: q90, 값 타입: float
  - 키: range, 값 타입: float
  - 키: skew, 값 타입: float
  - 키: std, 값 타입: float
  - 키: unique_values, 값 타입: int
  - 키: var, 값 타입: float


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'Advance레벨이 실무 경험 5년 이상의 SW설계 경험자가 풀 수 있는것이면, 적절했다고 생각됨', 'CYCLOMATIC COMPLEXITY 라는 개념을 몰랐고, cpu 100% 상황에서 MCU TASK 가 어떻게 동작되는지 모름(저는 AP/CPU 위 Linux/Android 환경에서만 개발을 해왔음)']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', '개략적으로는 비슷하나, 단순 진행도로는 알 수 없는 실무의 상황이 반영되기는 한계가 있을 것 같다.', '관련 환경을 접할 기회가 아직 없어서 답변 불가.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 6, 샘플 키: ['20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, ASPICE 표준이었음', '앞설문과 동일']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 6, 샘플 키: ['20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, ASPICE 표준이었음', '앞설문과 동일']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 8, 샘플 키: ['ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)', '과제 1을 수행할 수 있는 교육이나 교제를 주시면 어떻게 하는지를 알 수는 있을 것 같습니다. ']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 8, 샘플 키: ['ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)', '과제 1을 수행할 수 있는 교육이나 교제를 주시면 어떻게 하는지를 알 수는 있을 것 같습니다. ']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 잘 모르는 내용이었습니다.', 'ASpice의 프로세스와 SW 공학을 응용하는 문제라', 'ISO26262 및 ASPICE 획득 프로젝트를 경험한 인원이면 매우 쉽게 접근 했을거라 생각합니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 잘 모르는 내용이었습니다.', 'ASpice의 프로세스와 SW 공학을 응용하는 문제라', 'ISO26262 및 ASPICE 획득 프로젝트를 경험한 인원이면 매우 쉽게 접근 했을거라 생각합니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 8, 샘플 키: ['ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)', '과제 1을 수행할 수 있는 교육이나 교제를 주시면 어떻게 하는지를 알 수는 있을 것 같습니다. ']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 8, 샘플 키: ['ASPICE에 대한 지식이 있는사람, 없는사람이 각각 풀 수 있는 문제로 분기하는것은 좋다고 생각합니다.', 'MCU 개발자에게 유리하다고 생각합니다. MCU 이 외에 개발자들이 얼마나 많은진 모르겠으나, 관련 교육이 없다면 너무 생소한 S/W 질의라고 생각합니다.(제 현업과 문제가 동떨어짐)', '과제 1을 수행할 수 있는 교육이나 교제를 주시면 어떻게 하는지를 알 수는 있을 것 같습니다. ']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['154와 동일 답변', 'AP BSP 업무를 하면서 CPU / DDR MEMORY 사용 현황 및 그에 따른 문제점을 프로젝트 설계 단계에서 고민하나, MCU 와 같이 CPU / MEMORY 100% 인 상황을 고려하고 단일 S/W 을 설계하지 않습니다. AP BSP 에서는 수십개의 프로세스가 FOREGROUND / BACKGROUND 로 동작하기에 현업에서는 조금 더 추상적인 범위 내에서 설계 및 문제점 파악을 하고 있는 것 같습니다.', '데이터를 많이 사용한다고 복잡도가 높은거는 잘 모르겠음']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['154와 동일 답변', 'AP BSP 업무를 하면서 CPU / DDR MEMORY 사용 현황 및 그에 따른 문제점을 프로젝트 설계 단계에서 고민하나, MCU 와 같이 CPU / MEMORY 100% 인 상황을 고려하고 단일 S/W 을 설계하지 않습니다. AP BSP 에서는 수십개의 프로세스가 FOREGROUND / BACKGROUND 로 동작하기에 현업에서는 조금 더 추상적인 범위 내에서 설계 및 문제점 파악을 하고 있는 것 같습니다.', '데이터를 많이 사용한다고 복잡도가 높은거는 잘 모르겠음']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, C++', 'C, C++, JAVA']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, C++', 'C, C++, JAVA']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 여유로웠다', '매우 여유로웠다', '적절했다']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 여유로웠다', '매우 여유로웠다', '적절했다']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ISO26262 혹은 ASPICE 관련 상세 기준에 대한 내용은 보통 레퍼런스를 참조하기에, 해당 내용을 외우고 있는것이 아니다 보니, 시험 문제를 풀기에 다소 어려웠습니다.  ', 'ISO26262나 ASPICE의 지식 뿐만 아니라, 실재 설계 업무 경험으로 풀 수 있는 문제였음', 'ISO26262와 ASPICE가 범위가 방대하며 실무에서 다루어본적이 없어서']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ISO26262 혹은 ASPICE 관련 상세 기준에 대한 내용은 보통 레퍼런스를 참조하기에, 해당 내용을 외우고 있는것이 아니다 보니, 시험 문제를 풀기에 다소 어려웠습니다.  ', 'ISO26262나 ASPICE의 지식 뿐만 아니라, 실재 설계 업무 경험으로 풀 수 있는 문제였음', 'ISO26262와 ASPICE가 범위가 방대하며 실무에서 다루어본적이 없어서']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 쉬움', '약간 어려움', '적절함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 3, 샘플 키: ['다소 쉬움', '약간 어려움', '적절함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['20250401  2:00:37 PM', '20250401  2:04:29 PM', '20250401  2:08:41 PM']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['20250401  2:00:37 PM', '20250401  2:04:29 PM', '20250401  2:08:41 PM']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['222 사유로 평가 불가.', '31 문항을 푸는데에는 결정적이었습니다.', '31번 응답 시, ASPICE 모델에 대해서는 잘 알지 못하지만, 문제에서 묻는 것과 제일 유사해보이는 것을 해당 model 이미지에서 찾아서 응답했기에 중요 단서로 사용되었습니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['222 사유로 평가 불가.', '31 문항을 푸는데에는 결정적이었습니다.', '31번 응답 시, ASPICE 모델에 대해서는 잘 알지 못하지만, 문제에서 묻는 것과 제일 유사해보이는 것을 해당 model 이미지에서 찾아서 응답했기에 중요 단서로 사용되었습니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: [' ', 'ASPICE, 사이버 보안 (ISO/SAE  21434)', 'ASPICE, 사이버 보안 (ISO/SAE  21434), AUTOSAR']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: [' ', 'ASPICE, 사이버 보안 (ISO/SAE  21434)', 'ASPICE, 사이버 보안 (ISO/SAE  21434), AUTOSAR']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 3, 샘플 키: ['31 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 3, 샘플 키: ['31 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: [' ', 'ASPICE, 사이버 보안 (ISO/SAE  21434)', 'ASPICE, 사이버 보안 (ISO/SAE  21434), AUTOSAR']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: [' ', 'ASPICE, 사이버 보안 (ISO/SAE  21434)', 'ASPICE, 사이버 보안 (ISO/SAE  21434), AUTOSAR']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌', '서술형 1번을 풀었을 때 보단 많이 연관 되었던 것 같습니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌', '서술형 1번을 풀었을 때 보단 많이 연관 되었던 것 같습니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['기능안전을 의도한 내용 같은데 크게 와 닿지 않았다', '모듈의 순서도 등이 흡사하다.', '문제 아키텍처의 복잡도가 좀 더 낮음']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['기능안전을 의도한 내용 같은데 크게 와 닿지 않았다', '모듈의 순서도 등이 흡사하다.', '문제 아키텍처의 복잡도가 좀 더 낮음']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['SW구조에 대해 볼 수 있었습니다.', '기능안전, aspice 달성 중 sw아키텍처는 일부일 뿐이다', '모듈 간 상호 영향성에 대한 정보 제공']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['SW구조에 대해 볼 수 있었습니다.', '기능안전, aspice 달성 중 sw아키텍처는 일부일 뿐이다', '모듈 간 상호 영향성에 대한 정보 제공']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['그럴 수도 있으니....', '실제 프로젝트 환경에서는 모듈 간의 상호 동작을 통한 성능과 복잡도도 중요함', '앞설문과 동일.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['그럴 수도 있으니....', '실제 프로젝트 환경에서는 모듈 간의 상호 동작을 통한 성능과 복잡도도 중요함', '앞설문과 동일.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['192 사유로 평가 불가.', 'AI,인지 관련 환경은 잘 모르겠습니다.', 'ASPICE 를 모르니 답변 드리기 어렵습니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['192 사유로 평가 불가.', 'AI,인지 관련 환경은 잘 모르겠습니다.', 'ASPICE 를 모르니 답변 드리기 어렵습니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['212 사유로 평가 불가.', '32 문항을 풀지 못해서 사실 잘 모르겠습니다.', '32번 응답 시, Project 환경에 명시된 대응 전략을 구체화하여 답안을 작성했기 때문에 Project 환경이 중요 단서였습니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['212 사유로 평가 불가.', '32 문항을 풀지 못해서 사실 잘 모르겠습니다.', '32번 응답 시, Project 환경에 명시된 대응 전략을 구체화하여 답안을 작성했기 때문에 Project 환경이 중요 단서였습니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['그럴 수도 있으니....', '실제 프로젝트 환경에서는 모듈 간의 상호 동작을 통한 성능과 복잡도도 중요함', '앞설문과 동일.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['그럴 수도 있으니....', '실제 프로젝트 환경에서는 모듈 간의 상호 동작을 통한 성능과 복잡도도 중요함', '앞설문과 동일.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['..', '31은 단답형이라 풀 수 있었습니다.', '32 를 작성했으나 모르는 문제라고 생각함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['..', '31은 단답형이라 풀 수 있었습니다.', '32 를 작성했으나 모르는 문제라고 생각함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 3, 샘플 키: ['31 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 3, 샘플 키: ['31 문항만 풀었음', '둘 다 풀었음', '둘 다 풀지 못했음']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['..', '31은 단답형이라 풀 수 있었습니다.', '32 를 작성했으나 모르는 문제라고 생각함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['..', '31은 단답형이라 풀 수 있었습니다.', '32 를 작성했으나 모르는 문제라고 생각함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: [' ASPICE 프로세스를 숙지하고 있어야 풀 수 있는 문제로 느껴졌습니다.', '182 사유로 평가 불가.', '1번은 잘 모르는 내용이었습니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: [' ASPICE 프로세스를 숙지하고 있어야 풀 수 있는 문제로 느껴졌습니다.', '182 사유로 평가 불가.', '1번은 잘 모르는 내용이었습니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, Assembly Language(어셈블리어)', 'C, C++']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['C', 'C, Assembly Language(어셈블리어)', 'C, C++']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['92와 동일', 'IVI 제품, 특정한 기능 개발만 해왔었기에 \n이번 문제는 프로젝트 전반을 아우르는 문항이라 잘 모르겠습니다.', 'Project 관리와 시스템의 전반적인 분석 능력을 평가하는 시험으로 보였고, 현재 하고 있는 실무와는 거리가 조금 있어 어려움이 조금 있었지만, 필요한 지식이라고 생각이 들긴 합니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['92와 동일', 'IVI 제품, 특정한 기능 개발만 해왔었기에 \n이번 문제는 프로젝트 전반을 아우르는 문항이라 잘 모르겠습니다.', 'Project 관리와 시스템의 전반적인 분석 능력을 평가하는 시험으로 보였고, 현재 하고 있는 실무와는 거리가 조금 있어 어려움이 조금 있었지만, 필요한 지식이라고 생각이 들긴 합니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ASIL 등급과 ASPICE 레벨에 대해서 잘 알지 못합니다', 'ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'ASPICE와 ASIL D 만족을 위한 필요 조건에 대해서 알지 못하여 서술하지 못함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ASIL 등급과 ASPICE 레벨에 대해서 잘 알지 못합니다', 'ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'ASPICE와 ASIL D 만족을 위한 필요 조건에 대해서 알지 못하여 서술하지 못함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 6, 샘플 키: ['20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, ASPICE 표준이었음', '앞설문과 동일']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 6, 샘플 키: ['20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, ASPICE 표준이었음', '앞설문과 동일']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ASIL D를 만족하기 위해 Module의 계층이 어떻게 설정되어야 하는가에 대해서 결정하는 부분들이 실제 SW 개발 프로젝트 환경과 비슷하다 생각함', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', 'Project를 진행하며 여기에 주어진 항목들을 이렇게 정리하여 본 경험이 없어 잘 모르겠다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ASIL D를 만족하기 위해 Module의 계층이 어떻게 설정되어야 하는가에 대해서 결정하는 부분들이 실제 SW 개발 프로젝트 환경과 비슷하다 생각함', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', 'Project를 진행하며 여기에 주어진 항목들을 이렇게 정리하여 본 경험이 없어 잘 모르겠다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.', 'ASPICE를 잘 모릅니다. 가르쳐 주시고 평가하심이....']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.', 'ASPICE를 잘 모릅니다. 가르쳐 주시고 평가하심이....']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 25


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 25


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ASIL 등급과 ASPICE 레벨에 대해서 잘 알지 못합니다', 'ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'ASPICE와 ASIL D 만족을 위한 필요 조건에 대해서 알지 못하여 서술하지 못함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ASIL D를 만족하기 위해 Module의 계층이 어떻게 설정되어야 하는가에 대해서 결정하는 부분들이 실제 SW 개발 프로젝트 환경과 비슷하다 생각함', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', 'Project를 진행하며 여기에 주어진 항목들을 이렇게 정리하여 본 경험이 없어 잘 모르겠다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 6, 샘플 키: ['20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, ASPICE 표준이었음', '앞설문과 동일']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['142 와 동일 답변', '1번문제 해결에는 project 환경보단 아키텍처가 조금더 중요한 단서로 작용', 'ASIL level이 답변 작성에 영향을 미침']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'int'>
스칼라 값: 94


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['92와 동일', 'IVI 제품, 특정한 기능 개발만 해왔었기에 \n이번 문제는 프로젝트 전반을 아우르는 문항이라 잘 모르겠습니다.', 'Project 관리와 시스템의 전반적인 분석 능력을 평가하는 시험으로 보였고, 현재 하고 있는 실무와는 거리가 조금 있어 어려움이 조금 있었지만, 필요한 지식이라고 생각이 들긴 합니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['92와 동일', 'IVI 제품, 특정한 기능 개발만 해왔었기에 \n이번 문제는 프로젝트 전반을 아우르는 문항이라 잘 모르겠습니다.', 'Project 관리와 시스템의 전반적인 분석 능력을 평가하는 시험으로 보였고, 현재 하고 있는 실무와는 거리가 조금 있어 어려움이 조금 있었지만, 필요한 지식이라고 생각이 들긴 합니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 50
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'list'>
리스트/튜플, 길이: 50
첫 번째 항목 타입: str


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '1번이 더 쉬웠습니다.', '1보단 2가 좀 더 뭘 적어야 할지 알 것 같아서..?']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['1번은 프로젝트 상황에 대해서 상세히 공감하기 어렵기 때문이다', '1번이 더 쉬웠습니다.', '1보단 2가 좀 더 뭘 적어야 할지 알 것 같아서..?']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 6, 샘플 키: ['20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, ASPICE 표준이었음', '앞설문과 동일']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 6, 샘플 키: ['20개월 째인데 아키텍처가 이상하다', '실제 개발하고 있는 기능과 최근 필수 적용 해야 하는 기능안전, ASPICE 표준이었음', '앞설문과 동일']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌', '서술형 1번을 풀었을 때 보단 많이 연관 되었던 것 같습니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['2번문항과 프로젝트 환경과는 큰 관계가 없는 것 같다... 즉 2번 문항은 프로젝트 LIFE CYCLE 전체에 해당되는 것이다', '다소 전체적이고 개괄적이었다고 느낌', '서술형 1번을 풀었을 때 보단 많이 연관 되었던 것 같습니다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 5, 샘플 키: ['1과 연결되는 문제이므로 문제점 파악만 하면 적절하게 풀 수 있다.', '관련 표준 지식을 상세히 알고 있어야 하고, 그 내용을 바탕으로 문제 해결 경험과 역량 또한 필요하다고 생각 됨', '기능안전과 ASPICE에 대한 지식이 부족하여, 문제에서 원하는 수준의 답을 하기 불가능했음.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['둘 다 풀었음', '둘 다 풀지 못했음', '서술형 1 선택']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ASIL D를 만족하기 위해 Module의 계층이 어떻게 설정되어야 하는가에 대해서 결정하는 부분들이 실제 SW 개발 프로젝트 환경과 비슷하다 생각함', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', 'Project를 진행하며 여기에 주어진 항목들을 이렇게 정리하여 본 경험이 없어 잘 모르겠다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ASIL D를 만족하기 위해 Module의 계층이 어떻게 설정되어야 하는가에 대해서 결정하는 부분들이 실제 SW 개발 프로젝트 환경과 비슷하다 생각함', 'MCU 개발을 해본 경험이 없음. AP(CPU) 상에서 LINUX/ANDROID/QNX 개발만 해봤음', 'Project를 진행하며 여기에 주어진 항목들을 이렇게 정리하여 본 경험이 없어 잘 모르겠다.']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['..', '31은 단답형이라 풀 수 있었습니다.', '32 를 작성했으나 모르는 문제라고 생각함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['..', '31은 단답형이라 풀 수 있었습니다.', '32 를 작성했으나 모르는 문제라고 생각함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.', 'ASPICE를 잘 모릅니다. 가르쳐 주시고 평가하심이....']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['"이슈 해결을 위한 구체적인 상황" 이라는게 너무 추상적인 질의 같습니다. 관련 교육이나 사례를 경험해봐야 해당 문구가 어떤 뜻인지 명확히 알 것 같습니다.', 'ASPICE 를 이해하지 못하면 풀 수 없는 문제로 적절했습니다.', 'ASPICE를 잘 모릅니다. 가르쳐 주시고 평가하심이....']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '범위', '분산', '분위수_10%', '분위수_25%', '분위수_50%', '분위수_75%', '분위수_90%', '왜도', '중앙값', '첨도', '최대값', '최소값', '평균', '표준편차', '히스토그램']
  - 키: 개수, 값 타입: int
  - 키: 결측값, 값 타입: int
  - 키: 결측률, 값 타입: float
  - 키: 고유값수, 값 타입: int
  - 키: 범위, 값 타입: float
  - 키: 분산, 값 타입: float
  - 키: 분위수_10%, 값 타입: float
  - 키: 분위수_25%, 값 타입: float
  - 키: 분위수_50%, 값 타입: float
  - 키: 분위수_75%, 값 타입: float
  - 키: 분위수_90%, 값 타입: float
  - 키: 왜도, 값 타입: float
  - 키: 중앙값, 값 타입: float
  - 키: 첨도, 값 타입: float
  - 키: 최대값, 값 타입: float
  - 키: 최소값, 값 타입: float
  - 키: 평균, 값 타입: float
  - 키: 표준편차, 값 타입: float
  - 키: 히스토그램, 값 타입: dict, 키 수: 2, 샘플 키: ['구간', '빈도']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['\n6. 업무영역(중복)', '(112) (과제1)서술형 선택 이유\n', '1. 업무경력', '101 시나리오(실제상황 연관성)', '102 시나리오 전반의견\n', '111 (과제1) 서술형선택', '121 체감난이도(1번)', '121 체감난이도(1번).1', '122 체감난이도(1번) (주관식)', '122 체감난이도(1번)(주관식)', '123 문항 내용적절성 (2번)', '123 문항 내용적절성(1번)', '131. 지식이해 암기 중요도 (1번)', '131. 지식이해 암기 중요도 (2번)', '132. 자료 해석(분석)중요도 (1번)', '132. 자료 해석(분석)중요도 (2번)', '133. 문제 해결력 (1번)', '133. 문제 해결력 (2번)', '134. 전략적 판단력 (1번)', '134. 전략적 판단력 (2번)', '141 (시나리오) project 환경_실무유사도 (1번)', '141 (시나리오) project 환경_실무유사도 (2번)', '142 (시나리오) project 환경_실무유사도(주관식) (1번)', '142 (시나리오) project 환경_실무유사도(주관식) (2번)', '143 (시나리오) project 환경_자료활용도 (1번)', '143 (시나리오) project 환경_자료활용도 (2번)', '144 (시나리오) project 환경_자료활용도(주관식) (1번)', '144 (시나리오) project 환경_자료활용도(주관식) (2번)', '151 (시나리오) project Architecture_실무유사도 (1번)', '151 (시나리오) project Architecture_실무유사도 (2번)', '151 (시나리오) project Architecture_실무유사도(주관식) (1번)', '152 (시나리오) project Architecture_실무유사도(주관식) (2번)', '153 (시나리오) project Architecture_자료활용도 (1번)', '153 (시나리오) project Architecture_자료활용도 2번)', '153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (1번)', '154 (시나리오) project Architecture_자료활용도(주관식) (2번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번)', '162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번)', '163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번)', '164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번)', '17. 과제1 전반적 의견 (1번)', '17. 과제1 전반적 의견 (2번)', '181. 과제2_하위문항풀이여부', '182. 과제2_하위문항풀이여부(주관식)', '191 체감난이도(3번)', '192 체감난이도(3번) (주관식)', '193 문항 내용적절성 (3번)', '201. 지식이해 암기 중요도 (3번)', '202. 자료 해석(분석)중요도 (3번)', '203. 문제 해결력 (3번)', '204. 전략적 판단력 (3번)', '21. 개발 분야 경력 ', '211 (시나리오) project 환경_실무유사도 (3번)', '212 (시나리오) project 환경_실무유사도(주관식) (3번)', '213 (시나리오) project 환경_자료활용도 (3번)', '214 (시나리오) project 환경_자료활용도(주관식) (3번)', '22. PL급 이상 경력', '221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번)', '222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번)', '223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번)', '224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번)', '23. 과제2 전반적 의견 (3번)', '241. (Essential과 비교) 체감난이도', '242. (Essential과 비교) 지식이해/암기', '243. (Essential과 비교) 자료해석', '244. (Essential과 비교) 문제해결', '245. (Essential과 비교) 전략적판단', '251. 성취수준', '251. 성취수준(주관식)', '26. 시험관련 하고싶은 말', '3. 국제 표준 업무의 경험 수준', '4. 경험한 국제표준(중복)', '5. 사용언어', '7.소요시간', '8. 시험시간 적절성', '91 체감난이도(출제전반)', '92 체감난이도(서술)', '93 난이도 적절성(Advanced로서)\n', '과제11', '과제12', '과제2', '사번', '상/중/하위권', '성함', '순위', '응답제출시간', '점수대', '참여여부', '총점', '통과여부(70%적용)']
  - 키: 
6. 업무영역(중복), 값 타입: int
  - 키: (112) (과제1)서술형 선택 이유
, 값 타입: int
  - 키: 1. 업무경력, 값 타입: int
  - 키: 101 시나리오(실제상황 연관성), 값 타입: int
  - 키: 102 시나리오 전반의견
, 값 타입: int
  - 키: 111 (과제1) 서술형선택, 값 타입: int
  - 키: 121 체감난이도(1번), 값 타입: int
  - 키: 121 체감난이도(1번).1, 값 타입: int
  - 키: 122 체감난이도(1번) (주관식), 값 타입: int
  - 키: 122 체감난이도(1번)(주관식), 값 타입: int
  - 키: 123 문항 내용적절성 (2번), 값 타입: int
  - 키: 123 문항 내용적절성(1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (1번), 값 타입: int
  - 키: 131. 지식이해 암기 중요도 (2번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (1번), 값 타입: int
  - 키: 132. 자료 해석(분석)중요도 (2번), 값 타입: int
  - 키: 133. 문제 해결력 (1번), 값 타입: int
  - 키: 133. 문제 해결력 (2번), 값 타입: int
  - 키: 134. 전략적 판단력 (1번), 값 타입: int
  - 키: 134. 전략적 판단력 (2번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (1번), 값 타입: int
  - 키: 141 (시나리오) project 환경_실무유사도 (2번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (1번), 값 타입: int
  - 키: 142 (시나리오) project 환경_실무유사도(주관식) (2번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (1번), 값 타입: int
  - 키: 143 (시나리오) project 환경_자료활용도 (2번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (1번), 값 타입: int
  - 키: 144 (시나리오) project 환경_자료활용도(주관식) (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (1번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도 (2번), 값 타입: int
  - 키: 151 (시나리오) project Architecture_실무유사도(주관식) (1번), 값 타입: int
  - 키: 152 (시나리오) project Architecture_실무유사도(주관식) (2번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 (1번), 값 타입: int
  - 키: 153 (시나리오) project Architecture_자료활용도 2번), 값 타입: int
  - 키: 153 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (1번), 값 타입: int
  - 키: 154 (시나리오) project Architecture_자료활용도(주관식) (2번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 161 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (1번), 값 타입: int
  - 키: 162 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (1번), 값 타입: int
  - 키: 163 (시나리오) 모듈별성능복잡도데이터_실무유사도 (2번), 값 타입: int
  - 키: 164 (시나리오) 모듈별성능복잡도데이터_실무유사도(주관식) (2번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (1번), 값 타입: int
  - 키: 17. 과제1 전반적 의견 (2번), 값 타입: int
  - 키: 181. 과제2_하위문항풀이여부, 값 타입: int
  - 키: 182. 과제2_하위문항풀이여부(주관식), 값 타입: int
  - 키: 191 체감난이도(3번), 값 타입: int
  - 키: 192 체감난이도(3번) (주관식), 값 타입: int
  - 키: 193 문항 내용적절성 (3번), 값 타입: int
  - 키: 201. 지식이해 암기 중요도 (3번), 값 타입: int
  - 키: 202. 자료 해석(분석)중요도 (3번), 값 타입: int
  - 키: 203. 문제 해결력 (3번), 값 타입: int
  - 키: 204. 전략적 판단력 (3번), 값 타입: int
  - 키: 21. 개발 분야 경력 , 값 타입: int
  - 키: 211 (시나리오) project 환경_실무유사도 (3번), 값 타입: int
  - 키: 212 (시나리오) project 환경_실무유사도(주관식) (3번), 값 타입: int
  - 키: 213 (시나리오) project 환경_자료활용도 (3번), 값 타입: int
  - 키: 214 (시나리오) project 환경_자료활용도(주관식) (3번), 값 타입: int
  - 키: 22. PL급 이상 경력, 값 타입: int
  - 키: 221 (시나리오) Automotive SPICE process reference model_실무유사도 (3번), 값 타입: int
  - 키: 222 (시나리오) Automotive SPICE process reference model_실무유사도(주관식) (3번), 값 타입: int
  - 키: 223 (시나리오) Automotive SPICE process reference model_자료활용도 (3번), 값 타입: int
  - 키: 224 (시나리오) Automotive SPICE process reference model_자료활용도(주관식) (3번), 값 타입: int
  - 키: 23. 과제2 전반적 의견 (3번), 값 타입: int
  - 키: 241. (Essential과 비교) 체감난이도, 값 타입: int
  - 키: 242. (Essential과 비교) 지식이해/암기, 값 타입: int
  - 키: 243. (Essential과 비교) 자료해석, 값 타입: int
  - 키: 244. (Essential과 비교) 문제해결, 값 타입: int
  - 키: 245. (Essential과 비교) 전략적판단, 값 타입: int
  - 키: 251. 성취수준, 값 타입: int
  - 키: 251. 성취수준(주관식), 값 타입: int
  - 키: 26. 시험관련 하고싶은 말, 값 타입: int
  - 키: 3. 국제 표준 업무의 경험 수준, 값 타입: int
  - 키: 4. 경험한 국제표준(중복), 값 타입: int
  - 키: 5. 사용언어, 값 타입: int
  - 키: 7.소요시간, 값 타입: int
  - 키: 8. 시험시간 적절성, 값 타입: int
  - 키: 91 체감난이도(출제전반), 값 타입: int
  - 키: 92 체감난이도(서술), 값 타입: int
  - 키: 93 난이도 적절성(Advanced로서)
, 값 타입: int
  - 키: 과제11, 값 타입: int
  - 키: 과제12, 값 타입: int
  - 키: 과제2, 값 타입: int
  - 키: 사번, 값 타입: int
  - 키: 상/중/하위권, 값 타입: int
  - 키: 성함, 값 타입: int
  - 키: 순위, 값 타입: int
  - 키: 응답제출시간, 값 타입: int
  - 키: 점수대, 값 타입: int
  - 키: 참여여부, 값 타입: int
  - 키: 총점, 값 타입: int
  - 키: 통과여부(70%적용), 값 타입: int


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 4, 샘플 키: ['10년 이상', '1년 이상 ~ 3년 미만', '3년 이상 ~ 5년 미만']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ASIL 등급과 ASPICE 레벨에 대해서 잘 알지 못합니다', 'ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'ASPICE와 ASIL D 만족을 위한 필요 조건에 대해서 알지 못하여 서술하지 못함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['개수', '결측값', '결측률', '고유값수', '데이터타입', '상위값']
  - 키: 개수, 값 타입: int64
  - 키: 결측값, 값 타입: int64
  - 키: 결측률, 값 타입: float64
  - 키: 고유값수, 값 타입: int
  - 키: 데이터타입, 값 타입: str
  - 키: 상위값, 값 타입: dict, 키 수: 10, 샘플 키: ['ASIL 등급과 ASPICE 레벨에 대해서 잘 알지 못합니다', 'ASPICE LV2 및 ASILD 만족을 위한 세부 사항을 알지 못해서', 'ASPICE와 ASIL D 만족을 위한 필요 조건에 대해서 알지 못하여 서술하지 못함']


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 21


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 21


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 27


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 25


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 22


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'dict'>
딕셔너리 키 목록: ['avg_length', 'keywords', 'response_count', 'samples', 'word_freq']
  - 키: avg_length, 값 타입: float
  - 키: keywords, 값 타입: list, 길이: 10
  - 키: response_count, 값 타입: int
  - 키: samples, 값 타입: list, 길이: 5
  - 키: word_freq, 값 타입: list, 길이: 30


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)


===== 데이터 파싱 시작 =====
데이터 타입: <class 'NoneType'>
데이터 없음 (None)
